using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Drawing.Text;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace WindowsFormsApplication1
{
    public partial class frm : Form
    {
        string[] tam = {"'dc", "'dd", "'de", "'df", "'e0", "'e1", "'e2", "'e3", "'e4", "'e5", "'e6", "'e5\\'f7", "'e7", 
                         "'e8", "'e8\\'a3", "A", "W", "'b0", "'c3", "'aa\\'e8", "'ab\\'e8", "'ac\\'e8", "'aa\\'e8\\'a3", "'ab\\'e8\\'a3", "'aa\\'e8\\'f7", "'82", 
                         "'e9", "'e9\\'a3", "B", "X", "'b1", "'c4", "'aa\\'e9", "'ab\\'e9", "'ac\\'e9", "'aa\\'e9\\'a3", "'ab\\'e9\\'a3", "'aa\\'e9\\'f7", "'83", 
                         "'ea", "'ea\\'a3", "C", "Y", "'b2", "'c5", "'aa\\'ea", "'ab\\'ea", "'ac\\'ea", "'aa\\'ea\\'a3", "'ab\\'ea\\'a3", "'aa\\'ea\\'f7", "'84", 
                         "'eb", "'eb\\'a3", "D", "Z", "'b3", "'c6", "'aa\\'eb", "'ab\\'eb", "'ac\\'eb", "'aa\\'eb\\'a3", "'ab\\'eb\\'a3", "'aa\\'eb\\'f7", "'85", 
                         "'ec", "'ec\\'a3", "'ae", "'af", "'b4", "'c7", "'aa\\'ec", "'ab\\'ec", "'ac\\'ec", "'aa\\'ec\\'a3", "'ab\\'ec\\'a3", "'aa\\'ec\\'f7", "'86", 
                         "'ed", "'ed\\'a3", "E", "a", "'b5", "'c8", "'aa\\'ed", "'ab\\'ed", "'ac\\'ed", "'aa\\'ed\\'a3", "'ab\\'ed\\'a3", "'aa\\'ed\\'f7", "'87", 
                         "'ee", "'ee\\'a3", "F", "b", "'b6", "'c9", "'aa\\'ee", "'ab\\'ee", "'ac\\'ee", "'aa\\'ee\\'a3", "'ab\\'ee\\'a3", "'aa\\'ee\\'f7", "'88", 
                         "'ef", "'ef\\'a3", "G", "c", "'b8", "'cb", "'aa\\'ef", "'ab\\'ef", "'ac\\'ef", "'aa\\'ef\\'a3", "'ab\\'ef\\'a3", "'aa\\'ef\\'f7", "'89", 
                         "'f0", "'f0\\'a3", "H", "d", "'b9", "'cc", "'aa\\'f0", "'ab\\'f0", "'ac\\'f0", "'aa\\'f0\\'a3", "'ab\\'f0\\'a3", "'aa\\'f0\\'f7", "'8a", 
                         "'f1", "'f1\\'a3", "I", "e", "'ba", "'cd", "'aa\\'f1", "'ab\\'f1", "'ac\\'f1", "'aa\\'f1\\'a3", "'ab\\'f1\\'a3", "'aa\\'f1\\'f7", "'8b", 
                         "'f2", "'f2\\'a3", "J", "f", "'bb", "'ce", "'aa\\'f2", "'ab\\'f2", "'ac\\'f2", "'aa\\'f2\\'a3", "'ab\\'f2\\'a3", "'aa\\'f2\\'f7", "'8c", 
                         "'f3", "'f3\\'a3", "K", "g", "'bc", "'cf", "'aa\\'f3", "'ab\\'f3", "'ac\\'f3", "'aa\\'f3\\'a3", "'ab\\'f3\\'a3", "'aa\\'f3\\'f7", "'98", 
                         "'f4", "'f4\\'a3", "L", "h", "'bd", "'d6", "'aa\\'f4", "'ab\\'f4", "'ac\\'f4", "'aa\\'f4\\'a3", "'ab\\'f4\\'a3", "'aa\\'f4\\'f7", "'99", 
                         "'f5", "'f5\\'a3", "M", "i", "'be", "'d7", "'aa\\'f5", "'ab\\'f5", "'ac\\'f5", "'aa\\'f5\\'a3", "'ab\\'f5\\'a3", "'aa\\'f5\\'f7", "'9a", 
                         "'f6", "'f6\\'a3", "N", "j", "'bf", "'d8", "'aa\\'f6", "'ab\\'f6", "'ac\\'f6", "'aa\\'f6\\'a3", "'ab\\'f6\\'a3", "'aa\\'f6\\'f7", "'9b", 
                         "'f7", "'f7\\'a3", "O", "k", "'c0", "'d9", "'aa\\'f7", "'ab\\'f7", "'ac\\'f7", "'aa\\'f7\\'a3", "'ab\\'f7\\'a3", "'aa\\'f7\\'f7", "'9c", 
                         "'f8", "'f8\\'a3", "P", "l", "'c1", "'da", "'aa\\'f8", "'ab\\'f8", "'ac\\'f8", "'aa\\'f8\\'a3", "'ab\\'f8\\'a3", "'aa\\'f8\\'f7", "'9f", 
                         "'f9", "'f9\\'a3", "Q", "m", "'c2", "'db", "'aa\\'f9", "'ab\\'f9", "'ac\\'f9", "'aa\\'f9\\'a3", "'ab\\'f9\\'a3", "'aa\\'f9\\'f7", "'a1", 
                         "'fa", "'fa\\'a3", "R", "n", "'fa\\'a7", "'fa\\'a8", "'aa\\'fa", "'ab\\'fa", "'ac\\'fa", "'aa\\'fa\\'a3", "'ab\\'fa\\'a3", "'aa\\'fa\\'f7", "v", 
                         "'fb", "'fb\\'a3", "S", "o", "'fb\\'a7", "'fb\\'a8", "'aa\\'fb", "'ab\\'fb", "'ac\\'fb", "'aa\\'fb\\'a3", "'ab\\'fb\\'a3", "'aa\\'fb\\'f7", "w", 
                         "'fc", "'fc\\'a3", "T", "p", "'fc\\'a7", "'fc\\'a8", "'aa\\'fc", "'ab\\'fc", "'ac\\'fc", "'aa\\'fc\\'a3", "'ab\\'fc\\'a3", "'aa\\'fc\\'f7", "x", 
                         "'fd", "'fd\\'a3", "U", "q", "'fd\\'a7", "'fd\\'a8", "'aa\\'fd", "'ab\\'fd", "'ac\\'fd", "'aa\\'fd\\'a3", "'ab\\'fd\\'a3", "'aa\\'fd\\'f7", "y", 
                         "'fe", "'fe\\'a3", "V", "r", "'fe\\'a7", "'fe\\'a8", "'aa\\'fe", "'ab\\'fe", "'ac\\'fe", "'aa\\'fe\\'a3", "'ab\\'fe\\'a3", "'aa\\'fe\\'f7", "z", 
                         "'ff"
                        };

        string[] tab = {"'dc", "'dd", "'de", "'df", "'e0", "'e1", "'e2", "'e3", "'e4", "'e5", "'e6", "'e5\\'f7", "'e7", 
                        "'e8", "'e8\\'a3", "'e8\\'a4", "'e8\\'a6", "'b0", "'c3", "'aa\\'e8", "'ab\\'e8", "'ac\\'e8", "'aa\\'e8\\'a3", "'ab\\'e8\\'a3", "'aa\\'e8\\'f7", "'e8\\'a2", 
                        "'e9", "'e9\\'a3", "'e9\\'a4", "'e9\\'a6", "'b1", "'c4", "'aa\\'e9", "'ab\\'e9", "'ac\\'e9", "'aa\\'e9\\'a3", "'ab\\'e9\\'a3", "'aa\\'e9\\'f7", "'e9\\'a2", 
                        "'ea", "'ea\\'a3", "'ea\\'a4", "'ea\\'a6", "'b2", "'c5", "'aa\\'ea", "'ab\\'ea", "'ac\\'ea", "'aa\\'ea\\'a3", "'ab\\'ea\\'a3", "'aa\\'ea\\'f7", "'ea\\'a2", 
                        "'eb", "'eb\\'a3", "'eb\\'a4", "'eb\\'a6", "'b3", "'c6", "'aa\\'eb", "'ab\\'eb", "'ac\\'eb", "'aa\\'eb\\'a3", "'ab\\'eb\\'a3", "'aa\\'eb\\'f7", "'eb\\'a2", 
                        "'ec", "'ec\\'a3", "'ae", "'af", "'b4", "'c7", "'aa\\'ec", "'ab\\'ec", "'ac\\'ec", "'aa\\'ec\\'a3", "'ab\\'ec\\'a3", "'aa\\'ec\\'f7", "'ec\\'a2", 
                        "'ed", "'ed\\'a3", "'ed\\'a4", "'ed\\'a6", "'b5", "'c8", "'aa\\'ed", "'ab\\'ed", "'ac\\'ed", "'aa\\'ed\\'a3", "'ab\\'ed\\'a3", "'aa\\'ed\\'f7", "'ed\\'a2", 
                        "'ee", "'ee\\'a3", "'ee\\'a4", "'ee\\'a6", "'b6", "'c9", "'aa\\'ee", "'ab\\'ee", "'ac\\'ee", "'aa\\'ee\\'a3", "'ab\\'ee\\'a3", "'aa\\'ee\\'f7", "'ee\\'a2", 
                        "'ef", "'ef\\'a3", "'ef\\'a4", "'ef\\'a6", "'b8", "'cb", "'aa\\'ef", "'ab\\'ef", "'ac\\'ef", "'aa\\'ef\\'a3", "'ab\\'ef\\'a3", "'aa\\'ef\\'f7", "'ef\\'a2", 
                        "'f0", "'f0\\'a3", "'f0\\'a4", "'f0\\'a6", "'b9", "'cc", "'aa\\'f0", "'ab\\'f0", "'ac\\'f0", "'aa\\'f0\\'a3", "'ab\\'f0\\'a3", "'aa\\'f0\\'f7", "'f0\\'a2", 
                        "'f1", "'f1\\'a3", "'f1\\'a4", "'f1\\'a6", "'ba", "'cd", "'aa\\'f1", "'ab\\'f1", "'ac\\'f1", "'aa\\'f1\\'a3", "'ab\\'f1\\'a3", "'aa\\'f1\\'f7", "'f1\\'a2", 
                        "'f2", "'f2\\'a3", "'f2\\'a4", "'f2\\'a6", "'bb", "'ce", "'aa\\'f2", "'ab\\'f2", "'ac\\'f2", "'aa\\'f2\\'a3", "'ab\\'f2\\'a3", "'aa\\'f2\\'f7", "'f2\\'a2", 
                        "'f3", "'f3\\'a3", "'f3\\'a4", "'f3\\'a6", "'bc", "'cf", "'aa\\'f3", "'ab\\'f3", "'ac\\'f3", "'aa\\'f3\\'a3", "'ab\\'f3\\'a3", "'aa\\'f3\\'f7", "'f3\\'a2", 
                        "'f4", "'f4\\'a3", "'f4\\'a4", "'f4\\'a6", "'bd", "'d6", "'aa\\'f4", "'ab\\'f4", "'ac\\'f4", "'aa\\'f4\\'a3", "'ab\\'f4\\'a3", "'aa\\'f4\\'f7", "'f4\\'a2", 
                        "'f5", "'f5\\'a3", "'f5\\'a4", "'f5\\'a6", "'be", "'d7", "'aa\\'f5", "'ab\\'f5", "'ac\\'f5", "'aa\\'f5\\'a3", "'ab\\'f5\\'a3", "'aa\\'f5\\'f7", "'f5\\'a2", 
                        "'f6", "'f6\\'a3", "'f6\\'a4", "'f6\\'a6", "'bf", "'d8", "'aa\\'f6", "'ab\\'f6", "'ac\\'f6", "'aa\\'f6\\'a3", "'ab\\'f6\\'a3", "'aa\\'f6\\'f7", "'f6\\'a2", 
                        "'f7", "'f7\\'a3", "'f7\\'a4", "'f7\\'a6", "'c0", "'d9", "'aa\\'f7", "'ab\\'f7", "'ac\\'f7", "'aa\\'f7\\'a3", "'ab\\'f7\\'a3", "'aa\\'f7\\'f7", "'f7\\'a2", 
                        "'f8", "'f8\\'a3", "'f8\\'a4", "'f8\\'a6", "'c1", "'da", "'aa\\'f8", "'ab\\'f8", "'ac\\'f8", "'aa\\'f8\\'a3", "'ab\\'f8\\'a3", "'aa\\'f8\\'f7", "'f8\\'a2", 
                        "'f9", "'f9\\'a3", "'f9\\'a4", "'f9\\'a6", "'c2", "'db", "'aa\\'f9", "'ab\\'f9", "'ac\\'f9", "'aa\\'f9\\'a3", "'ab\\'f9\\'a3", "'aa\\'f9\\'f7", "'f9\\'a2", 
                        "'fa", "'fa\\'a3", "'fa\\'a4", "'fa\\'a6", "'fa\\'a7", "'fa\\'a8", "'aa\\'fa", "'ab\\'fa", "'ac\\'fa", "'aa\\'fa\\'a3", "'ab\\'fa\\'a3", "'aa\\'fa\\'f7", "'fa\\'a2", 
                        "'fb", "'fb\\'a3", "'fb\\'a4", "'fb\\'a6", "'fb\\'a7", "'fb\\'a8", "'aa\\'fb", "'ab\\'fb", "'ac\\'fb", "'aa\\'fb\\'a3", "'ab\\'fb\\'a3", "'aa\\'fb\\'f7", "'fb\\'a2", 
                        "'fc", "'fc\\'a3", "'fc\\'a4", "'fc\\'a6", "'fc\\'a7", "'fc\\'a8", "'aa\\'fc", "'ab\\'fc", "'ac\\'fc", "'aa\\'fc\\'a3", "'ab\\'fc\\'a3", "'aa\\'fc\\'f7", "'fc\\'a2", 
                        "'fd", "'fd\\'a3", "'fd\\'a4", "'fd\\'a6", "'fd\\'a7", "'fd\\'a8", "'aa\\'fd", "'ab\\'fd", "'ac\\'fd", "'aa\\'fd\\'a3", "'ab\\'fd\\'a3", "'aa\\'fd\\'f7", "'fd\\'a2", 
                        "'fe", "'fe\\'a3", "'fe\\'a4", "'fe\\'a6", "'fe\\'a7", "'fe\\'a8", "'aa\\'fe", "'ab\\'fe", "'ac\\'fe", "'aa\\'fe\\'a3", "'ab\\'fe\\'a3", "'aa\\'fe\\'f7", "'fe\\'a2", 
                        "'ff"
                        };

        string[] tace = {"u57857?", "u57858?", "u57859?", "u57860?", "u57861?", "u57862?", "u57863?", "u57864?", "u57865?", "u57866?", "u57867?", "u57868?", "u57869?",
                            "u57873?", "u57874?", "u57875?", "u57876?", "u57877?", "u57878?", "u57879?", "u57880?", "u57881?", "u57882?", "u57883?", "u57884?", "u57872?",
                            "u57889?", "u57890?", "u57891?", "u57892?", "u57893?", "u57894?", "u57895?", "u57896?", "u57897?", "u57898?", "u57899?", "u57900?", "u57888?",
                            "u57905?", "u57906?", "u57907?", "u57908?", "u57909?", "u57910?", "u57911?", "u57912?", "u57913?", "u57914?", "u57915?", "u57916?", "u57904?",
                            "u57921?", "u57922?", "u57923?", "u57924?", "u57925?","u57926?", "u57927?", "u57928?", "u57929?", "u57930?", "u57931?", "u57932?", "u57920?",
                            "u57937?", "u57938?", "u57939?", "u57940?", "u57941?", "u57942?", "u57943?", "u57944?", "u57945?", "u57946?", "u57947?", "u57948?", "u57936?",
                            "u57953?", "u57954?", "u57955?", "u57956?", "u57957?", "u57958?", "u57959?", "u57960?", "u57961?", "u57962?", "u57963?", "u57964?", "u57952?",
                            "u57969?", "u57970?", "u57971?", "u57972?", "u57973?", "u57974?", "u57975?", "u57976?", "u57977?", "u57978?", "u57979?", "u57980?", "u57968?",
                            "u57985?", "u57986?", "u57987?", "u57988?", "u57989?", "u57990?", "u57991?", "u57992?", "u57993?", "u57994?", "u57995?", "u57996?", "u57984?",
                            "u58001?", "u58002?", "u58003?", "u58004?", "u58005?", "u58006?", "u58007?", "u58008?", "u58009?", "u58010?", "u58011?", "u58012?", "u58000?",
                            "u58017?", "u58018?", "u58019?", "u58020?", "u58021?", "u58022?", "u58023?", "u58024?", "u58025?", "u58026?", "u58027?", "u58028?", "u58016?",
                            "u58033?", "u58034?", "u58035?", "u58036?", "u58037?", "u58038?", "u58039?", "u58040?", "u58041?", "u58042?", "u58043?", "u58044?", "u58032?",
                            "u58049?", "u58050?", "u58051?", "u58052?", "u58053?", "u58054?", "u58055?", "u58056?", "u58057?", "u58058?", "u58059?", "u58060?", "u58048?",
                            "u58065?", "u58066?", "u58067?", "u58068?", "u58069?", "u58070?", "u58071?", "u58072?", "u58073?", "u58074?", "u58075?", "u58076?", "u58064?",
                            "u58081?", "u58082?", "u58083?", "u58084?", "u58085?", "u58086?", "u58087?", "u58088?", "u58089?", "u58090?", "u58091?", "u58092?", "u58080?",
                            "u58097?", "u58098?", "u58099?", "u58100?", "u58101?", "u58102?", "u58103?", "u58104?", "u58105?", "u58106?", "u58107?", "u58108?", "u58096?",
                            "u58113?", "u58114?", "u58115?", "u58116?", "u58117?", "u58118?", "u58119?", "u58120?", "u58121?", "u58122?", "u58123?", "u58124?", "u58112?",
                            "u58129?", "u58130?", "u58131?", "u58132?", "u58133?", "u58134?", "u58135?", "u58136?", "u58137?", "u58138?", "u58139?", "u58140?", "u58128?",
                            "u58145?", "u58146?", "u58147?", "u58148?", "u58149?", "u58150?", "u58151?", "u58152?", "u58153?", "u58154?", "u58155?", "u58156?", "u58144?",
                            "u58209?", "u58210?", "u58211?", "u58212?", "u58213?", "u58214?", "u58215?", "u58216?", "u58217?", "u58218?", "u58219?", "u58220?", "u58208?",
                            "u58193?", "u58194?", "u58195?", "u58196?", "u58197?", "u58198?", "u58199?", "u58200?", "u58201?", "u58202?", "u58203?", "u58204?", "u58192?",
                            "u58161?",  "u58162?", "u58163?", "u58164?", "u58165?", "u58166?", "u58167?", "u58168?", "u58169?", "u58170?", "u58171?", "u58172?", "u58160?",
                            "u58225?", "u58226?", "u58227?", "u58228?", "u58229?", "u58230?", "u58231?", "u58232?", "u58233?", "u58234?", "u58235?", "u58236?", "u58224?",
                            "u58241?", "u58242?", "u58243?", "u58244?", "u58245?", "u58246?", "u58247?", "u58248?", "u58249?", "u58250?", "u58251?", "u58252?", "u58240?",
                            "u58253?"
                            };

        string[] tscii = {"'ab", "'ac", "'fe", "'ae", "'af", "'b0", "'b1", "'b2", "'b3", "'b4", "'b5", "'b6", "'b7", 
                            "'b8", "'b8\\'a1", "'b8\\'a2", "'b8\\'a3", "'cc", "'dc", "'a6\\'b8", "'a7\\'b8", "'a8\\'b8", "'a6\\'b8\\'a1", "'a7\\'b8\\'a1", "'a6\\'b8\\'aa", "'ec", 
                            "'b9", "'b9\\'a1", "'b9\\'a2", "'b9\\'a3", "'99", "'9b", "'a6\\'b9", "'a7\\'b9", "'a8\\'b9", "'a6\\'b9\\'a1", "'a7\\'b9\\'a1", "'a6\\'b9\\'aa", "'ed", 
                            "'ba", "'ba\\'a1", "'ba\\'a2", "'ba\\'a3", "'cd", "'dd", "'a6\\'ba", "'a7\\'ba", "'a8\\'ba", "'a6\\'ba\\'a1", "'a7\\'ba\\'a1", "'a6\\'ba\\'aa", "'ee", 
                            "'bb", "'bb\\'a1", "'bb\\'a2", "'bb\\'a3", "'9a", "'9c", "'a6\\'bb", "'a7\\'bb", "'a8\\'bb", "'a6\\'bb\\'a1", "'a7\\'bb\\'a1", "'a6\\'bb\\'aa", "'ef", 
                            "'bc", "'bc\\'a1", "'ca", "'cb", "'ce", "'de", "'a6\\'bc", "'a7\\'bc", "'a8\\'bc", "'a6\\'bc\\'a1", "'a7\\'bc\\'a1", "'a6\\'bc\\'aa", "'f0", 
                            "'bd", "'bd\\'a1", "'bd\\'a2", "'bd\\'a3", "'cf", "'df", "'a6\\'bd", "'a7\\'bd", "'a8\\'bd", "'a6\\'bd\\'a1", "'a7\\'bd\\'a1", "'a6\\'bd\\'aa", "'f1", 
                            "'be", "'be\\'a1", "'be\\'a2", "'be\\'a3", "'d0", "'e0", "'a6\\'be", "'a7\\'be", "'a8\\'be", "'a6\\'be\\'a1", "'a7\\'be\\'a1", "'a6\\'be\\'aa", "'f2", 
                            "'bf", "'bf\\'a1", "'bf\\'a2", "'bf\\'a3", "'d1", "'e1", "'a6\\'bf", "'a7\\'bf", "'a8\\'bf", "'a6\\'bf\\'a1", "'a7\\'bf\\'a1", "'a6\\'bf\\'aa", "'f3", 
                            "'c0", "'c0\\'a1", "'c0\\'a2", "'c0\\'a3", "'d2", "'e2", "'a6\\'c0", "'a7\\'c0", "'a8\\'c0", "'a6\\'c0\\'a1", "'a7\\'c0\\'a1", "'a6\\'c0\\'aa", "'f4", 
                            "'c1", "'c1\\'a1", "'c1\\'a2", "'c1\\'a3", "'d3", "'e3", "'a6\\'c1", "'a7\\'c1", "'a8\\'c1", "'a6\\'c1\\'a1", "'a7\\'c1\\'a1", "'a6\\'c1\\'aa", "'f5", 
                            "'c2", "'c2\\'a1", "'c2\\'a2", "'c2\\'a3", "'d4", "'e4", "'a6\\'c2", "'a7\\'c2", "'a8\\'c2", "'a6\\'c2\\'a1", "'a7\\'c2\\'a1", "'a6\\'c2\\'aa", "'f6", 
                            "'c3", "'c3\\'a1", "'c3\\'a2", "'c3\\'a3", "'d5", "'e5", "'a6\\'c3", "'a7\\'c3", "'a8\\'c3", "'a6\\'c3\\'a1", "'a7\\'c3\\'a1", "'a6\\'c3\\'aa", "'f7", 
                            "'c4", "'c4\\'a1", "'c4\\'a2", "'c4\\'a3", "'d6", "'e6", "'a6\\'c4", "'a7\\'c4", "'a8\\'c4", "'a6\\'c4\\'a1", "'a7\\'c4\\'a1", "'a6\\'c4\\'aa", "'f8", 
                            "'c5", "'c5\\'a1", "'c5\\'a2", "'c5\\'a3", "'d7", "'e7", "'a6\\'c5", "'a7\\'c5", "'a8\\'c5", "'a6\\'c5\\'a1", "'a7\\'c5\\'a1", "'a6\\'c5\\'aa", "'f9", 
                            "'c6", "'c6\\'a1", "'c6\\'a2", "'c6\\'a3", "'d8", "'e8", "'a6\\'c6", "'a7\\'c6", "'a8\\'c6", "'a6\\'c6\\'a1", "'a7\\'c6\\'a1", "'a6\\'c6\\'aa", "'fa", 
                            "'c7", "'c7\\'a1", "'c7\\'a2", "'c7\\'a3", "'d9", "'e9", "'a6\\'c7", "'a7\\'c7", "'a8\\'c7", "'a6\\'c7\\'a1", "'a7\\'c7\\'a1", "'a6\\'c7\\'aa", "'fb", 
                            "'c8", "'c8\\'a1", "'c8\\'a2", "'c8\\'a3", "'da", "'ea", "'a6\\'c8", "'a7\\'c8", "'a8\\'c8", "'a6\\'c8\\'a1", "'a7\\'c8\\'a1", "'a6\\'c8\\'aa", "'fc", 
                            "'c9", "'c9\\'a1", "'c9\\'a2", "'c9\\'a3", "'db", "'eb", "'a6\\'c9", "'a7\\'c9", "'a8\\'c9", "'a6\\'c9\\'a1", "'a7\\'c9\\'a1", "'a6\\'c9\\'aa", "'fd", 
                            "'85", "'85\\'a1", "'85\\'a2", "'85\\'a3", "'85\\'a4", "'85\\'a5", "'a6\\'85", "'a7\\'85", "'a8\\'85", "'a6\\'85\\'a1", "'a7\\'85\\'a1", "'a6\\'85\\'aa", "'8a", 
                            "'84", "'84\\'a1", "'84\\'a2", "'84\\'a3", "'84\\'a4", "'84\\'a5", "'a6\\'84", "'a7\\'84", "'a8\\'84", "'a6\\'84\\'a1", "'a7\\'84\\'a1", "'a6\\'ba\\'aa", "'89", 
                            "'83", "'83\\'a1", "'83\\'a2", "'83\\'a3", "'83\\'a4", "'83\\'a5", "'a6\\'83", "'a7\\'83", "'a8\\'83", "'a6\\'83\\'a1", "'a7\\'83\\'a1", "'a6\\'83\\'aa", "'88", 
                            "'86", "'86\\'a1", "'86\\'a2", "'86\\'a3", "'86\\'a4", "'86\\'a5", "'a6\\'86", "'a7\\'86", "'a8\\'86", "'a6\\'86\\'a1", "'a7\\'86\\'a1",  "'a6\\'86\\'aa", "'8b", 
                            "'87", "'87\\'a1", "'87\\'a2", "'87\\'a3", "'87\\'a4", "'87\\'a5", "'a6\\'87", "'a7\\'87", "'a8\\'87", "'a6\\'87\\'a1", "'a7\\'87\\'a1", "'a6\\'87\\'aa", "'8c", 
                            "'82"
                            };

         string[] shreelipi = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "J\\'cd", "L", 
                                 "P", "P\\'f5", "Q", "R", "S", "T", "'f6P", "'f7P", "'f8P", "'f6P\\'f5", "'f7P\\'f5", "'f6P\\'cd", "U", 
                                 "V", "V\\'f5", "W", "X", "Y", "Z", "'f6V", "'f7V", "'f8V", "'f6V\\'f5", "'f7V\\'f5", "'f6V\\'cd", "[", 
                                 "\\\\", "\\\\\\'f5", "]", "^", "_", "`", "'f6\\\\", "'f7\\\\", "'f8\\\\", "'f6\\\\\\'f5", "'f7\\\\\\'f5", "'f6\\\\\\'cd", "a", 
                                 "b", "b\\'f5", "c", "d", "e", "f", "'f6b", "'f7b", "'f8b", "'f6b\\'f5", "'f7b\\'f5", "'f6b\\'cd", "g", 
                                 "h", "h\\'f5", "i", "j", "k", "l", "'f6h", "'f7h", "'f8h", "'f6h\\'f5", "'f7h\\'f5", "'f6h\\'cd", "m", 
                                 "n", "n\\'f5", "o", "p", "q", "r", "'f6n", "'f7n", "'f8n", "'f6n\\'f5", "'f7n\\'f5", "'f6n\\'cd", "s", 
                                 "u", "u\\'f5", "v", "w", "x", "y", "'f6u", "'f7u", "'f8u", "'f6u\\'f5", "'f7u\\'f5", "'f6u\\'cd", "z", 
                                 "|", "|\\'f5", "{", "}", "~", "'a1", "'f6|", "'f7|", "'f8|", "'f6|\\'f5", "'f7|\\'f5", "'f6|\\'cd", "'a2", 
                                 "'a3", "'a3\\'f5", "'a4", "'a5", "'a6", "'a7", "'f6\\'a3", "'f7\\'a3", "'f8\\'a3", "'f6\\'a3\\'f5", "'f7\\'a3\\'f5", "'f6\\'a3\\'cd", "'a8", 
                                 "'a9", "'a9\\'f5", "'aa", "'ab", "bullet", "'89", "'f6\\'a9", "'f7\\'a9", "'f8\\'a9", "'f6\\'a9\\'f5", "'f7\\'a9\\'f5", "'f6\\'a9\\'cd", "'ae", 
                                 "'af", "'af\\'f5", "'b0", "'b1", "'b2", "'b3", "'f6\\'af", "'f7\\'af", "'f8\\'af", "'f6\\'af\\'f5", "'f7\\'af\\'f5", "'f6\\'af\\'cd", "'b4", 
                                 "'b5", "'b5\\'f5", "'9b", "'9f", "'b8", "'b9", "'f6\\'b5", "'f7\\'b5", "'f8\\'b5", "'f6\\'b5\\'f5", "'f7\\'b5\\'f5", "'f6\\'b5\\'cd", "'ba", 
                                 "'bb", "'bb\\'f5", "'bc", "'bd", "'be", "'bf", "'f6\\'bb", "'f7\\'bb", "'f8\\'bb", "'f6\\'bb\\'f5", "'f7\\'bb\\'f5", "'f6\\'bb\\'cd", "'c0", 
                                 "'c1", "'c1\\'f5", "'c2", "'c3", "'c4", "'c5", "'f6\\'c1", "'f7\\'c1", "'f8\\'c1", "'f6\\'c1\\'f5", "'f7\\'c1\\'f5", "'f6\\'c1\\'cd", "'c6", 
                                 "'c7", "'c7\\'f5", "'c8", "'c9", "'ca", "'cb", "'f6\\'c7", "'f7\\'c7", "'f8\\'c7", "'f6\\'c7\\'f5", "'f7\\'c7\\'f5", "'f6\\'c7\\'cd", "'cc", 
                                 "'cd", "'cd\\'f5", "'ce", "'cf", "'d0", "'d1", "'f6\\'cd", "'f7\\'cd", "'f8\\'cd", "'f6\\'cd\\'f5", "'f7\\'cd\\'f5", "'f6\\'cd\\'cd", "'d2", 
                                 "'d3", "'d3\\'f5", "'d4", "'d5", "'d6", "'d7", "'f6\\'d3", "'f7\\'d3", "'f8\\'d3", "'f6\\'d3\\'f5", "'f7\\'d3\\'f5", "'f6\\'d3\\'cd", "'d8", 
                                 "'da", "'da\\'f5", "'db", "'dc", "'dd", "'de", "'f6\\'da", "'f7\\'da", "'f8\\'da", "'f6\\'da\\'f5", "'f7\\'da\\'f5", "'f6\\'da\\'cd", "'df", 
                                 "'e9", "'e9\\'f5", "'ea", "'eb", "'e9\\'fa", "'e9\\'fc", "'f6\\'e9", "'f7\\'e9", "'f8\\'e9", "'f6\\'e9\\'f5", "'f7\\'e9\\'f5", "'f6\\'e9\\'cd", "'ec", 
                                 "'e5", "'e5\\'f5", "'e6", "'e7", "'e5\\'fa", "'e5\\'fc", "'f6\\'e5", "'f7\\'e5", "'f8\\'e5", "'f6\\'e5\\'f5", "'f7\\'e5\\'f5", "'f6\\'e5\\'cd", "'e8", 
                                 "'e1", "'e1\\'f5", "'e2", "'e3", "'e1\\'fa", "'e1\\'fc", "'f6\\'e1", "'f7\\'e1", "'f8\\'e1", "'f6\\'e1\\'f5", "'f7\\'e1\\'f5", "'f6\\'e1\\'cd", "'e4", 
                                 "'ed", "'ed\\'f5", "'ee", "'ef", "'ed\\'fa", "'ed\\'fc", "'f6\\'ed", "'f7\\'ed", "'f8\\'ed", "'f6\\'ed\\'f5", "'f7\\'ed\\'f5", "'f6\\'ed\\'cd", "'f0", 
                                 "'f1", "'f1\\'f5", "'f2", "'f3", "'f1\\'fa", "'f1\\'fc", "'f6\\'f1", "'f7\\'f1", "'f8\\'f1", "'f6\\'f1\\'f5", "'f7\\'f1\\'f5", "'f6\\'f1\\'cd", "'f4", 
                                 "'ff"
                                };

          string[] vanavil = {"m", "M", "'cf", "<", "c", "C", "v", "V", "I", "x", "X", "xs", "~", 
                                "f", "fh", "'bb", "'d1", "F", "T", "bf", "nf", "if", "bfh", "nfh", "bfs", "'a1", 
                                "'87", "'87h", "'e0", "'86", "'bc", "'bd", "b\\'87", "n\\'87", "i\\'87", "b\\'87h", "n\\'87h", "b\\'87s", "'a7", 
                                "r", "rh", "'c1", "'d3", "R", "N", "br", "nr", "ir", "brh", "nrh", "brs", "'a2", 
                                "P", "Ph", "'e1", "'d8", "|", "'fa", "bP", "nP", "iP", "bPh", "nPh", "bPs", "'8a", 
                                "l", "lh", "o", "O", "L", "^", "bl", "nl", "il", "blh", "nlh", "bls", "'a3", 
                                "z", "zh", "'e2", "'d9", "Q", "'fb", "bz", "nz", "iz", "bzh", "nzh", "bzs", "'a9", 
                                "j", "jh", "'c2", "'d4", "J", "'f6", "bj", "nj", "ij", "bjh", "njh", "bjs", "'a4", 
                                "e", "eh", "'e3", "'da", "E", "'fc", "be", "ne", "ie", "beh", "neh", "bes", "'aa", 
                                "g", "gh", "'c3", "'d5", "'f2", "'f3", "bg", "ng", "ig", "bgh", "ngh", "bgs", "'a5", 
                                "k", "kh", "'e4", "'db", "K", "_", "bk", "nk", "ik", "bkh", "nkh", "bks", "'ab", 
                                "a", "ah", "'e6", "p", "'cd", "'f4", "ba", "na", "ia", "bah", "nah", "bas", "'8c", 
                                "u", "uh", "'e7", "'df", "U", "%", "bu", "nu", "iu", "buh", "nuh", "bus", "'ae", 
                                "y", "yh", "'e8", "'c4", "Y", "'ff", "by", "ny", "iy", "byh", "nyh", "bys", "'9a", 
                                "t", "th", "'e9", "'c5", "'ce", "'f1", "bt", "nt", "it", "bth", "nth", "bts", "'9b", 
                                "H", "Hh", "'ea", "'c6", "G", ">", "bH", "nH", "iH", "bHh", "nHh", "bHs", "'9c", 
                                "s", "sh", "'eb", "'c7", "S", "q", "bs", "ns", "is", "bsh", "nsh", "bss", "'9f", 
                                "w", "wh", "'bf", "'d6", "W", "'f9", "bw", "nw", "iw", "bwh", "nwh", "bws", "'89", 
                                "d", "dh", "'e5", "'dc", "D", "}", "bd", "nd", "id", "bdh", "ndh", "bds", "'8b", 
                                "[", "[h", "'ec", "'c8", "[&", "[]", "b[", "n[", "i[", "b[h", "n[h", "b[s", "'b0", 
                                "'f5", "'f5h", "'ee", "'ca", "'f5&", "'f5]", "b\\'f5", "n\\'f5", "i\\'f5", "b\\'f5h", "n\\'f5h", "b\\'f5s", "Z", 
                                "#", "#h", "'ed", "'c9", "#&", "#]", "b#", "n#", "i#", "b#h", "n#h", "b#s", "{", 
                                "A", "Ah", "'ef", "'cb", "A&", "A]", "bA", "nA", "iA", "bAh", "nAh", "bAs", "'c0", 
                                "B", "Bh", "'f8", "'cc", "B&", "B]", "bB", "nB", "iB", "bBh", "nBh", "bBs", "'ba", 
                                "$" 
                                };


          string[] bamini = {"m", "M", ",", "<", "c", "C", "v", "V", "I", "x", "X", "xs", "/", 
                                "f", "fh", "fp", "fP", "F", "$", "nf", "Nf", "if", "nfh", "Nfh", "nfs", "f;", 
                                "q", "qh", "qp", "qP", "", "q+", "nq", "Nq", "iq", "nqh", "Nqh", "nqs", "q;", 
                                "r", "rh", "rp", "rP", "R", "#", "nr", "Nr", "ir", "nrh", "Nrh", "nrs", "r;", 
                                "Q", "Qh", "Qp", "QP", "", "", "nQ", "NQ", "iQ", "nQh", "NQh", "nQs", "Q;", 
                                "l", "lh", "b", "B", "L", "^", "nl", "Nl", "il", "nlh", "Nlh", "nls", "l;", 
                                "z", "zh", "zp", "zP", "Z", "Z\\}", "nz", "Nz", "iz", "nzh", "Nzh", "nzs", "z;", 
                                "j", "jh", "jp", "jP", "J", "J\\}", "nj", "Nj", "ij", "njh", "Njh", "njs", "j;", 
                                "e", "eh", "ep", "eP", "E", "E\\}", "ne", "Ne", "ie", "neh", "Neh", "nes", "e;", 
                                "g", "gh", "gp", "gP", "G", "G+", "ng", "Ng", "ig", "ngh", "Ngh", "ngs", "g;", 
                                "k", "kh", "kp", "kP", "K", "%", "nk", "Nk", "ik", "nkh", "Nkh", "nks", "k;", 
                                "a", "ah", "ap", "aP", "A", "A+", "na", "Na", "ia", "nah", "Nah", "nas", "a;", 
                                "u", "uh", "up", "uP", "U", "&", "nu", "Nu", "iu", "nuh", "Nuh", "nus", "u;", 
                                "y", "yh", "yp", "yP", "Y", "Y\\}", "ny", "Ny", "iy", "nyh", "Nyh", "nys", "y;", 
                                "t", "th", "tp", "tP", "T", "T+", "nt", "Nt", "it", "nth", "Nth", "nts", "t;", 
                                "o", "oh", "op", "oP", "O", "*", "no", "No", "io", "noh", "Noh", "nos", "o;", 
                                "s", "sh", "sp", "sP", "S", "Sh", "ns", "Ns", "is", "nsh", "Nsh", "nss", "s;", 
                                "w", "wh", "wp", "wP", "W", "W\\}", "nw", "Nw", "iw", "nwh", "Nwh", "nws", "w;", 
                                "d", "dh", "dp", "dP", "D", "D\\}", "nd", "Nd", "id", "ndh", "Ndh", "nds", "d;", 
                                "]", "]h", "]p", "]P", "]\\{", "]_", "n]", "N]", "i]", "n]h", "N]h", "n]s", "];", 
                                "\\\\", "\\\\h", "\\\\p", "\\\\P", "\\\\\\{", "\\\\_", "n\\\\", "N\\\\", "i\\\\", "n\\\\h", "N\\\\h", "n\\\\s", "\\\\;", 
                                "[", "[h", "[p", "[P", "[\\{", "[_", "n[", "N[", "i[", "n[h", "N[h", "n[s", "[;", 
                                "`", "`h", "`p", "`P", "`\\{", "`_", "n`", "N`", "i`", "n`h", "N`h", "n`s", "`;", 
                                "f;\\\\", "f;\\\\h", "f;\\\\p", "f;\\\\P", "f;\\\\\\{", "f;\\\\_", "f;n\\\\", "f;N\\\\", "f;i\\\\", "f;n\\\\h", "f;N\\\\h", "f;n\\\\s", "f;\\\\;",
                                "="
                                };

          string[] softview = {"@", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "I[", "K", 
                                "L", "L\\'f4", "'a1", "'b8", "'cf", "'e1", "'f9L", "'faL", "'fbL", "'f9L\\'f4", "'faL\\'f4", "'f9L[", "d", 
                                "M", "M\\'f4", "'a2", "'b9", "'d0", "'e2", "'f9M", "'faM", "'fbM", "'f9M\\'f4", "'faM\\'f4", "'f9M[", "e", 
                                "N", "N\\'f4", "'a3", "'ba", "'d1", "'e3", "'f9N", "'faN", "'fbN", "'f9N\\'f4", "'faN\\'f4", "'f9N[", "f", 
                                "O", "O\\'f4", "'a4", "'bb", "'d2", "'e4", "'f9O", "'faO", "'fbO", "'f9O\\'f4", "'faO\\'f4", "'f9O[", "g", 
                                "P", "P\\'f4", "'a5", "'bc", "'d3", "'e5", "'f9P", "'faP", "'fbP", "'f9P\\'f4", "'faP\\'f4", "'f9P[", "h", 
                                "Q", "Q\\'f4", "'a6", "'bd", "'d4", "'e6", "'f9Q", "'faQ", "'fbQ", "'f9Q\\'f4", "'faQ\\'f4", "'f9Q[", "i", 
                                "R", "R\\'f4", "'a7", "'be", "'d5", "'e7", "'f9R", "'faR", "'fbR", "'f9R\\'f4", "'faR\\'f4", "'f9R[", "j", 
                                "S", "S\\'f4", "'a8", "'bf", "'d6", "'e8", "'f9S", "'faS", "'fbS", "'f9S\\'f4", "'faS\\'f4", "'f9S[", "k", 
                                "T", "T\\'f4", "'a9", "'c0", "'d7", "'e9", "'f9T", "'faT", "'fbT", "'f9T\\'f4", "'faT\\'f4", "'f9T[", "l", 
                                "U", "U\\'f4", "'aa", "'c1", "'d8", "'ea", "'f9U", "'faU", "'fbU", "'f9U\\'f4", "'faU\\'f4", "'f9U[", "m", 
                                "V", "V\\'f4", "'ab", "'c2", "'d9", "'eb", "'f9V", "'faV", "'fbV", "'f9V\\'f4", "'faV\\'f4", "'f9V[", "n", 
                                "W", "W\\'f4", "'ac", "'c3", "'da", "'ec", "'f9W", "'faW", "'fbW", "'f9W\\'f4", "'faW\\'f4", "'f9W[", "o", 
                                "X", "X\\'f4", "-", "'c4", "'db", "'ed", "'f9X", "'faX", "'fbX", "'f9X\\'f4", "'faX\\'f4", "'f9X[", "p", 
                                "Y", "Y\\'f4", "'ae", "'c5", "'dc", "'ee", "'f9Y", "'faY", "'fbY", "'f9Y\\'f4", "'faY\\'f4", "'f9Y[", "q", 
                                "Z", "Z\\'f4", "'af", "'c6", "'dd", "'ef", "'f9Z", "'faZ", "'fbZ", "'f9Z\\'f4", "'faZ\\'f4", "'f9Z[", "r", 
                                "[", "[\\'f4", "'b0", "'c7", "'de", "'f0", "'f9[", "'fa[", "'fb[", "'f9[\\'f4", "'fa[\\'f4", "'f9[[", "s", 
                                "\\\\", "\\\\\\'f4", "'b1", "'c8", "'df", "'f1", "'f9\\\\", "'fa\\\\", "'fb\\\\", "'f9\\\\\\'f4", "'fa\\\\\\'f4", "'f9\\\\[", "t", 
                                "]", "]\\'f4", "'b2", "'c9", "'e0", "'f2", "'f9]", "'fa]", "'fb]", "'f9]\\'f4", "'fa]\\'f4", "'f9][", "u", 
                                "^", "^\\'f4", "'b3", "'ca", "^\\'fd", "^\\'fe", "'f9^", "'fa^", "'fb^", "'f9^\\'f4", "'fa^\\'f4", "'f9^[", "v", 
                                "`", "`\\'f4", "'b5", "'cc", "`\\'fd", "`\\'fe", "'f9`", "'fa`", "'fb`", "'f9`\\'f4", "'fa`\\'f4", "'f9`[", "x", 
                                "_", "_\\'f4", "'b4", "'cb", "_\\'fd", "_\\'fe", "'f9_", "'fa_", "'fb_", "'f9_\\'f4", "'fa_\\'f4", "'f9_[", "w", 
                                "a", "a\\'f4", "'b6", "'cd", "a\\'fd", "a\\'fe", "'f9a", "'faa", "'fba", "'f9a\\'f4", "'faa\\'f4", "'f9a[", "y", 
                                "b", "b\\'f4", "'b7", "'ce", "b\\'fd", "b\\'fe", "'f9b", "'fab", "'fbb", "'f9b\\'f4", "'fab\\'f4", "'f9b[", "z", 
                                "c"
                                };

          string[] lttm = {"m", "M", "'ef", "<", "c", "C", "v", "V", "I", "x", "X", "xs", "~", 
                            "f", "fh", "'bb", "'d1", "F", "T", "bf", "nf", "if", "bfh", "nfh", "bfs", "'a1", 
                            "'87", "'87h", "'c0", "'86", "'bc", "'bd", "b\\'87", "n\\'87", "i\\'87", "n\\'87h", "b\\'87h", "b\\'87s", "'a7", 
                            "r", "rh", "'e1", "'d3", "R", "N", "br", "nr", "ir", "brh", "nrh", "brs", "'a2", 
                            "P", "Ph", "'c1", "'d8", "|", "'fa", "bP", "nP", "iP", "bPh", "nPh", "bPs", "'8a", 
                            "l", "lh", "o", "O", "L", "^", "bl", "nl", "il", "blh", "nlh", "bls", "'a3",  
                            "z", "zh", "'c2", "'d9", "Q", "'fb", "bz", "nz", "iz", "bzh", "nzh", "bzs", "'a9",  
                            "j", "jh", "'e2", "'d4", "J", "'f6", "bj", "nj", "ij", "bjh", "njh", "bjs", "'a4",  
                            "e", "eh", "'c3", "'da", "E", "'fc", "be", "ne", "ie", "beh", "neh", "bes", "'aa",  
                            "g", "gh", "'e3", "'d5", "'f2", "'f3", "bg", "ng", "ig", "bgh", "ngh", "bgs", "'a5",  
                            "k", "kh", "'c4", "'db", "K", "_", "bk", "nk", "ik", "bkh", "nkh", "bks", "'ab",  
                            "a", "ah", "'c6", "p", "'ed", "'f4", "ba", "na", "ia", "bah", "nah", "bas", "'8c",  
                            "u", "uh", "'c7", "'df", "U", "%", "bu", "nu", "iu", "buh", "nuh", "bus", "'ae",  
                            "y", "yh", "'c8", "'e4", "Y", "'ff", "by", "ny", "iy", "byh", "nyh", "bys", "'9a",  
                            "t", "th", "'c9", "'e5", "'ee", "'f1", "bt", "nt", "it", "bth", "nth", "bts", "'9b",  
                            "H", "Hh", "'ca", "'e6", "G", ">", "bH", "nH", "iH", "bHh", "nHh", "bHs", "'9c",  
                            "s", "sh", "'cb", "'e7", "S", "q", "bs", "ns", "is", "bsh", "nsh", "bss", "'9f",  
                            "w", "wh", "'bf", "'d6", "W", "'f9", "bw", "nw", "iw", "bwh", "nwh", "bws", "'89",  
                            "d", "dh", "'c5", "'dc", "D", "}", "bd", "nd", "id", "bdh", "ndh", "bds", "'8b",  
                            "[", "[h", "'cc", "'e8", "[&", "[]", "b[", "n[", "i[", "b[h", "n[h", "b[s", "'de",  
                            "'f5", "'f5h", "'ce", "'ea", "'f5&", "'f5]",  "b\\'f5", "n\\'f5", "i\\'f5", "b\\'f5h", "n\\'f5h", "b\\'f5s", "Z",  
                            "#", "#h", "'cd", "'e9", "#&", "#]", "b#", "n#", "i#", "b#h", "n#h", "b#s", "{",  
                            "A", "Ah", "'cf", "'eb", "A&", "A]", "bA", "nA", "iA", "bAh", "nAh", "bAs", "'e0", 
                            "B", "Bh", "'f8", "'ec", "B&", "B]", "bB", "nB", "iB", "bBh", "nBh", "bBs", "'ba",
                            "$"  
                            };
        string[] senthamizh = {"'b6", "g", "'d6", "~", "c", "'bb", "'a8", "'b0", "n", "'ce", "{", "'c1", "'e0",
                                "'ef", "'efV", "'fe", "'ff", "z", "'ed", "'d8\\'ef", "'bc\\'ef", "'e7\\'ef", "'d8\\'efV", "'bc\\'efV", "'d8\\'ef\\'e1", "'c2",
                                "'f4", "'f4V", "", "", "", "", "'d8\\'f4", "'bc\\'f4", "'e7\\'f4", "'d8\\'f4V", "'bc\\'f4V", "'d8\\'f4\\'e1", "'ba",
                                "'c4", "'c4V", "E", "'e6", "'b7", "'f3", "'d8\\'c4", "'bc\\'c4", "'e7\\'c4", "'d8\\'c4V", "'bc\\'c4V", "'d8\\'c4\\'e1", "'df",
                                "Q", "QV", "", "", "", "", "'d8Q", "'bcQ", "'e7Q", "'d8QV", "'bcQV", "'d8Q\\'e1", "'de",
                                "'a6", "'a6V", "'bd", "'cf", "|", "'f9", "'d8\\'a6", "'bc\\'a6", "'e7\\'a6", "'d8\\'a6V", "'bc\\'a6V", "'d8\\'a6\\'e1", "'e2",
                                "'f0", "'f0V", "'e8", "'a7", "b", "I", "'d8\\'f0", "'bc\\'f0", "'e7\\'f0", "'d8\\'f0V", "'bc\\'f0V", "'d8\\'f0\\'e1", "'f5",
                                ">", ">V", "]", "y", "m", "#", "'d8>", "'bc>", "'e7>", "'d8>V", "'bc>V", "'d8>\\'e1", "'dd",
                                "'e5", "'e5V", "W", "'c0", "O", "'b1", "'d8\\'e5", "'bc\\'e5", "'e7\\'e5", "'d8\\'e5V", "'bc\\'e5V", "'d8\\'e5\\'e1", "'cd",
                                "'c3", "'c3V", "'b8", "'ac", "A", "'af", "'d8\\'c3", "'bc\\'c3", "'e7\\'c3", "'d8\\'c3V", "'bc\\'c3V", "'d8\\'c3\\'e1", "'a9",
                                "\\\\", "\\\\V", "t", "*", "x", "J", "'d8\\\\", "'bc\\\\", "'e7\\\\", "'d8\\\\V", "'bc\\\\V", "'d8\\\\\\'e1", "D",
                                "B", "BV", "l", "X", "'a5", "R", "'d8B", "'bcB", "'e7B", "'d8BV", "'bcBV", "'d8B\\'e1", "F",
                                "'ab", "'abV", "'f6", "Z", "'f2", "'d4", "'d8\\'ab", "'bc\\'ab", "'e7\\'ab", "'d8\\'abV", "'bc\\'abV", "'d8\\'ab\\'e1", "'ec",
                                "'e9", "'e9V", "o", "'dc", "K", "'d9", "'d8\\'e9", "'bc\\'e9", "'e7\\'e9", "'d8\\'e9V", "'bc\\'e9V", "'d8\\'e9\\'e1", "_",
                                "k", "kV", "s", "T", "'a1", "'c6", "'d8k", "'bck", "'e7k", "'d8kV", "'bckV", "'d8k\\'e1", "'cb",
                                "w", "wV", "a", "'d1", "'bf", "'f1", "'d8w", "'bcw", "'e7w", "'d8wV", "'bcwV", "'d8w\\'e1", "'b5",
                                "'e1", "'e1V", "'b9", "C", "'d3", "j", "'d8\\'e1", "'bc\\'e1", "'e7\\'e1", "'d8\\'e1V", "'bc\\'e1V", "'d8\\'e1\\'e1", "^",
                                "'c5", "'c5V", "'a4", "S", "'ae", "G", "'d8\\'c5", "'bc\\'c5", "'e7\\'c5", "'d8\\'c5V", "'bc\\'c5V", "'d8\\'c5\\'e1", "u",
                                "'aa", "'aaV", "M", "'cc", "'d0", "'fb", "'d8\\'aa", "'bc\\'aa", "'e7\\'aa", "'d8\\'aaV", "'bc\\'aaV", "'d8\\'aa\\'e1", "[",
                                "v", "vV", "L", "'a2", "q", "`", "'d8v", "'bcv", "'e7v", "'d8vV", "'bcvV", "'d8v\\'e1", "'fc",
                                "'ad", "'adV", "'b4", "U", "'d7", "'a3", "'d8\\'ad", "'bc\\'ad", "'e7\\'ad", "'d8\\'adV", "'bc\\'adV", "'d8\\'ad\\'e1", "i",
                                "'db", "'dbV", "'f7", "'fd", "h", "'c9", "'d8\\'db", "'bc\\'db", "'e7\\'db", "'d8\\'dbV", "'bc\\'dbV", "'d8\\'db\\'e1", "'eb",
                                "'c7", "'c7V", "N", "'ea", "q", "'da", "'d8\\'c7", "'bc\\'c7", "'e7\\'c7", "'d8\\'c7V", "'bc\\'c7V", "'d8\\'c7\\'e1", "'e3",
                                "'b3", "'b3V", "H", "'c8", "Y", "f", "'d8\\'b3", "'bc\\'b3", "'e7\\'b3", "'d8\\'b3V", "'bc\\'b3V", "'d8\\'b3\\'e1", "'d5",
                                "p"
                                };
        string[] cnet = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "J[", "@", 
                            "L", "L\\'f4", "'a1", "'b8", "'cf", "'e1", "'f9L", "'faL", "'fbL", "'f9L\\'f4", "'faL\\'f4", "'f9L[", "d", 
                            "M", "M\\'f4", "", "", "", "", "'f9M", "'faM", "'fbM", "'f9M\\'f4", "'faM\\'f4", "'f9M[", "e", 
                            "N", "N\\'f4", "'a3", "'ba", "'d1", "'e3", "'f9N", "'faN", "'fbN", "'f9N\\'f4", "'faN\\'f4", "'f9N[", "f", 
                            "O", "O\\'f4", "", "",  "", "", "'f9O", "'faO", "'fbO", "'f9O\\'f4", "'faO\\'f4", "'f9O[", "g", 
                            "P", "P\\'f4", "'a5", "'bc", "'d3", "'e5", "'f9P", "'faP", "'fbP", "'f9P\\'f4", "'faP\\'f4", "'f9P[", "h", 
                            "Q", "Q\\'f4", "'a6", "'bd", "'d4", "'e6", "'f9Q", "'faQ", "'fbQ", "'f9Q\\'f4", "'faQ\\'f4", "'f9Q[", "i", 
                            "R", "R\\'f4", "'a7", "'be", "'d5", "'e7", "'f9R", "'faR", "'fbR", "'f9R\\'f4", "'faR\\'f4", "'f9R[", "j", 
                            "S", "S\\'f4", "'a8", "'bf", "'d6", "'e8", "'f9S", "'faS", "'fbS", "'f9S\\'f4", "'faS\\'f4", "'f9S[", "k", 
                            "T", "T\\'f4", "'a9", "'c0", "'d7", "'e9", "'f9T", "'faT", "'fbT", "'f9T\\'f4", "'faT\\'f4", "'f9T[", "l", 
                            "U", "U\\'f4", "'aa", "'c1", "'d8", "'ea", "'f9U", "'faU", "'fbU", "'f9U\\'f4", "'faU\\'f4", "'f9U[", "m", 
                            "V", "V\\'f4", "'ab", "'c2", "'d9", "'eb", "'f9V", "'faV", "'fbV", "'f9V\\'f4", "'faV\\'f4", "'f9V[", "n", 
                            "W", "W\\'f4", "'ac", "'c3", "'da", "'ec", "'f9W", "'faW", "'fbW", "'f9W\\'f4", "'faW\\'f4", "'f9W[", "o", 
                            "X", "X\\'f4", "\\-", "'c4", "'db", "'ed", "'f9X", "'faX", "'fbX", "'f9X\\'f4", "'faX\\'f4", "'f9X[", "p", 
                            "Y", "Y\\'f4", "'ae", "'c5", "'dc", "'ee", "'f9Y", "'faY", "'fbY", "'f9Y\\'f4", "'faY\\'f4", "'f9Y[", "q", 
                            "Z", "Z\\'f4", "'af", "'c6", "'dd", "'ef", "'f9Z", "'faZ", "'fbZ", "'f9Z\\'f4", "'faZ\\'f4", "'f9Z[", "r", 
                            "[", "[\\'f4", "'b0", "'c7", "'de", "'f0", "'f9[", "'fa[", "'fb[", "'f9[\\'f4", "'fa[\\'f4", "'f9[[", "s", 
                            "\\\\", "\\\\\\'f4", "'b1", "'c8", "'df", "'f1", "'f9\\\\", "'fa\\\\", "'fb\\\\", "'f9\\\\\\'f4", "'fa\\\\\\'f4", "'f9\\\\[", "t", 
                            "]", "]\\'f4", "'b2", "'c9", "'e0", "'f2", "'f9]", "'fa]", "'fb]", "'f9]\\'f4", "'fa]\\'f4", "'f9][", "u", 

                            "^", "^\\'f4", "'b3", "'ca", "^\\'f7", "^\\'f8", "'f9^", "'fa^", "'fb^", "'f9^\\'f4", "'fa^\\'f4", "'f9^[", "v", 
                            "`", "`\\'f4", "'b5", "'cc", "`\\'f7", "`\\'f8", "'f9`", "'fa`", "'fb`", "'f9`\\'f4", "'fa`\\'f4", "'f9`[", "x", 
                            "_", "_\\'f4", "'b4", "'cb", "_\\'f7", "_\\'f8", "'f9_", "'fa_", "'fb_", "'f9_\\'f4", "'fa_\\'f4", "'f9_[", "w", 
                            "a", "a\\'f4", "'b6", "'cd", "a\\'f7", "a\\'f8", "'f9a", "'faa", "'fba", "'f9a\\'f4", "'faa\\'f4", "'f9a[", "y", 
                            "b", "b\\'f4", "'b7", "'ce", "b\\'f7", "b\\'f8", "'f9b", "'fab", "'fbb", "'f9b\\'f4", "'fab\\'f4", "'f9b[", "z", 
                            "c"
                            };

        string[] jeeva = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "J[", "@", 
                            "L", "L\\'f4", "'b8", "'a1", "'e1", "'cf", "'f9L", "'faL", "'fbL", "'f9L\\'f4", "'faL\\'f4", "'f9L[", "d", 
                            "M", "M\\'f4", "", "", "", "", "'f9M", "'faM", "'fbM", "'f9M\\'f4", "'faM\\'f4", "'f9M[", "e", 
                            "N", "N\\'f4", "'ba", "'a3", "'e3", "'d1", "'f9N", "'faN", "'fbN", "'f9N\\'f4", "'faN\\'f4", "'f9N[", "f", 
                            "O", "O\\'f4", "", "",  "", "", "'f9O", "'faO", "'fbO", "'f9O\\'f4", "'faO\\'f4", "'f9O[", "g", 
                            "P", "P\\'f4", "'bc", "'a5", "'e5", "'d3", "'f9P", "'faP", "'fbP", "'f9P\\'f4", "'faP\\'f4", "'f9P[", "h", 
                            "Q", "Q\\'f4", "'bd", "'a6", "'e6", "'d4", "'f9Q", "'faQ", "'fbQ", "'f9Q\\'f4", "'faQ\\'f4", "'f9Q[", "i", 
                            "R", "R\\'f4", "'be", "'a7", "'e7", "'d5", "'f9R", "'faR", "'fbR", "'f9R\\'f4", "'faR\\'f4", "'f9R[", "j", 
                            "S", "S\\'f4", "'bf", "'a8", "'e8", "'d6", "'f9S", "'faS", "'fbS", "'f9S\\'f4", "'faS\\'f4", "'f9S[", "k", 
                            "T", "T\\'f4", "'c0", "'a9", "'e9", "'d7", "'f9T", "'faT", "'fbT", "'f9T\\'f4", "'faT\\'f4", "'f9T[", "l", 
                            "U", "U\\'f4", "'c1", "'aa", "'ea", "'d8", "'f9U", "'faU", "'fbU", "'f9U\\'f4", "'faU\\'f4", "'f9U[", "m", 
                            "V", "V\\'f4", "'c2", "'ab", "'eb", "'d9", "'f9V", "'faV", "'fbV", "'f9V\\'f4", "'faV\\'f4", "'f9V[", "n", 
                            "W", "W\\'f4", "'c3", "'ac", "'ec", "'da", "'f9W", "'faW", "'fbW", "'f9W\\'f4", "'faW\\'f4", "'f9W[", "o", 
                            "X", "X\\'f4", "'c4", "\\-", "'ed", "'db", "'f9X", "'faX", "'fbX", "'f9X\\'f4", "'faX\\'f4", "'f9X[", "p", 
                            "Y", "Y\\'f4", "'c5", "'ae", "'ee", "'dc", "'f9Y", "'faY", "'fbY", "'f9Y\\'f4", "'faY\\'f4", "'f9Y[", "q", 
                            "Z", "Z\\'f4", "'c6", "'af", "'ef", "'dd", "'f9Z", "'faZ", "'fbZ", "'f9Z\\'f4", "'faZ\\'f4", "'f9Z[", "r", 
                            "[", "[\\'f4", "'c7", "'b0", "'f0", "'de", "'f9[", "'fa[", "'fb[", "'f9[\\'f4", "'fa[\\'f4", "'f9[[", "s", 
                            "\\\\", "\\\\\\'f4", "'c8", "'b1", "'f1", "'df", "'f9\\\\", "'fa\\\\", "'fb\\\\", "'f9\\\\\\'f4", "'fa\\\\\\'f4", "'f9\\\\[", "t", 
                            "]", "]\\'f4", "'c9", "'b2", "'f2", "'e0", "'f9]", "'fa]", "'fb]", "'f9]\\'f4", "'fa]\\'f4", "'f9][", "u", 

                            "^", "^\\'f4", "'ca", "'b3", "^\\'f7", "^\\'f8", "'f9^", "'fa^", "'fb^", "'f9^\\'f4", "'fa^\\'f4", "'f9^[", "v", 
                            "`", "`\\'f4", "'cc", "'b5", "`\\'f7", "`\\'f8", "'f9`", "'fa`", "'fb`", "'f9`\\'f4", "'fa`\\'f4", "'f9`[", "x", 
                            "_", "_\\'f4", "'cb", "'b4", "_\\'f7", "_\\'f8", "'f9_", "'fa_", "'fb_", "'f9_\\'f4", "'fa_\\'f4", "'f9_[", "w", 
                            "a", "a\\'f4", "'cd", "'b6", "a\\'f7", "a\\'f8", "'f9a", "'faa", "'fba", "'f9a\\'f4", "'faa\\'f4", "'f9a[", "y", 
                            "b", "b\\'f4", "'ce", "'b7", "b\\'f7", "b\\'f8", "'f9b", "'fab", "'fbb", "'f9b\\'f4", "'fab\\'f4", "'f9b[", "z", 
                            "c"
                            };

       string[] amudham = {"m", "M", ",", "<", "c", "C", "v", "V", "I", "x", "X", "xs", "@", 
                                "f", "fh", "fp", "fP", "F", "T", "bf", "nf", "if", "bfh", "nfh", "bfs", "f;", 
                                "'", "'h", "'p", "'P", "'[", "'\\{", "b'", "n'", "i'", "b'h", "n'h", "b's", "';", 
                                "r", "rh", "rp", "rP", "R", "N", "br", "nr", "ir", "brh", "nrh", "brs", "r;", 
                                "\"", "\"h", "\"p", "\"P", "`", "`\\}", "b\"", "n\"", "i\"", "b\"h", "n\"h", "b\"s", "\";", 
                                "l", "lh", "o", "O", "L", "?", "bl", "nl", "il", "blh", "nlh", "bls", "l;", 
                                "z", "zh", "zp", "zP", "q", "q\\}", "bz", "nz", "iz", "bzh", "nzh", "bzs", "z;", 
                                "j", "jh", "jp", "jP", "J", "J\\}", "bj", "nj", "ij", "bjh", "njh", "bjs", "j;", 
                                "e", "eh", "ep", "eP", "E", "E\\}", "be", "ne", "ie", "beh", "neh", "bes", "e;", 
                                "g", "gh", "gp", "gP", "g[", "g\\{", "bg", "ng", "ig", "bgh", "ngh", "bgs", "g;", 
                                "k", "kh", "kp", "kP", "K", "\\", "bk", "nk", "ik", "bkh", "nkh", "bks", "k;", 
                                "a", "ah", "ap", "aP", "a[", "a\\{", "ba", "na", "ia", "bah", "nah", "bas", "a;", 
                                "u", "uh", "up", "uP", "U", "+", "bu", "nu", "iu", "buh", "nuh", "bus", "u;", 
                                "y", "yh", "yp", "yP", "Y", "Y\\}", "by", "ny", "iy", "byh", "nyh", "bys", "y;", 
                                "t", "th", "tp", "tP", "t[", "t\\{", "bt", "nt", "it", "bth", "nth", "bts", "t;", 
                                "H", "Hh", "Hp", "HP", "G", "=", "bH", "nH", "iH", "bHh", "nHh", "bHs", "H;", 
                                "s", "sh", "sp", "sP", "S", "~", "bs", "ns", "is", "bsh", "nsh", "bss", "s;", 
                                "w", "wh", "wp", "wP", "W", "W\\}", "bw", "nw", "iw", "bwh", "nwh", "bws", "w;", 
                                "d", "dh", "dp", "dP", "D", "D\\}", "bd", "nd", "id", "bdh", "ndh", "bds", "d;", 

                                "!", "!h", "!p", "!P", "!%", "!^", "b!", "n!", "i!", "b!h", "n!h", "b!s", "!;", 
                                "#", "#h", "#p", "#P", "#%", "#^", "b#", "n#", "i#", "b#h", "n#h", "b#s", "#;", 
                                "$", "$h", "$p", "$P", "$%", "$^", "b$", "n$", "i$", "b$h", "n$h", "b$s", "$;", 
                                "Q", "Qh", "Qp", "QP", "Q%", "Q^", "bQ", "nQ", "iQ", "bQh", "nQh", "bQs", "Q;", 
                                "&", "&h", "&p", "&P", "&%", "&^", "b&", "n&", "i&", "b&h", "n&h", "b&s", "&;", 
                                "_" 
                                };

        string[] suriyan = {"m", "M", ",", "<", "c", "C", "v", "V", "I", "x", "X", "xs", "~",
                                "f", "fh", "fp", "fP", "F", "T", "bf", "nf", "if", "bfh", "nfh", "bfs", "f;",
                                "'", "'h", "'p", "'P", "'[", "'\\{", "b'", "n'", "i'", "b'h", "n'h", "b's", "';",
                                "r", "rh", "rp", "rP", "R", "N", "br", "nr", "ir", "brh", "nrh", "brs", "r;",
                                "\"", "\"h", "\"p", "\"P", "|", "|]", "b\"", "n\"", "i\"", "b\"h", "n\"h", "b\"s", "\";",
                                "l", "lh", "o", "O", "L", "^", "bl", "nl", "il", "blh", "nlh", "bls", "l;",
                                "z", "zh", "zp", "zP", "Q", "Q]", "bz", "nz", "iz", "bzh", "nzh", "bzs", "z;",
                                "j", "jh", "jp", "jP", "J", "J]", "bj", "nj", "ij", "bjh", "njh", "bjs", "j;",
                                "e", "eh", "ep", "eP", "E", "E]", "be", "ne", "ie", "beh", "neh", "bes", "e;",
                                "g", "gh", "gp", "gP", "g[", "g\\{", "bg", "ng", "ig", "bgh", "ngh", "bgs", "g;",
                                "k", "kh", "kp", "kP", "K", "_", "bk", "nk", "ik", "bkh", "nkh", "bks", "k;",
                                "a", "ah", "ap", "aP", "a[", "a\\{", "ba", "na", "ia", "bah", "nah", "bas", "a;",
                                "u", "uh", "up", "uP", "U", "%", "bu", "nu", "iu", "buh", "nuh", "bus", "u;",
                                "y", "yh", "yp", "yP", "Y", "Y]", "by", "ny", "iy", "byh", "nyh", "bys", "y;",
                                "t", "th", "tp", "tP", "t[", "t\\{", "bt", "nt", "it", "bth", "nth", "bts", "t;",
                                "H", "Hh", "Hp", "HP", "G", ">", "bH", "nH", "iH", "bHh", "nHh", "bHs", "H;",
                                "s", "sh", "sp", "sP", "S", "q", "bs", "ns", "is", "bsh", "nsh", "bss", "s;",
                                "w", "wh", "wp", "wP", "W", "W]", "bw", "nw", "iw", "bwh", "nwh", "bws", "w;",
                                "d", "dh", "dp", "dP", "D", "D]", "bd", "nd", "id", "bdh", "ndh", "bds", "d;",

                                "!", "!h", "!p", "!P", "!&", "!@", "b!", "n!", "i!", "b!h", "n!h", "b!s", "!;",
                                "\\\\", "\\\\h", "\\\\p", "\\\\P", "\\\\&", "\\\\@", "b\\\\", "n\\\\", "i\\\\", "b\\\\h", "n\\\\h", "b\\\\s", "\\\\;",
                                "#", "#h", "#p", "#P", "#&", "#@", "b#", "n#", "i#", "b#h", "n#h", "b#s", "#;",
                                "A", "Ah", "Ap", "AP", "A&", "A@", "bA", "nA", "iA", "bAh", "nAh", "bAs", "A;",
                                "B", "Bh", "Bp", "BP", "B&", "B@", "bB", "nB", "iB", "bBh", "nBh", "bBs", "B;",
                                "$"};

        string[] cc = {"a", "A", "e", "E", "u", "U", "y", "Y", "i", "o", "O", "oL", "|",
                            "k", "kK", "k~", "k@", "q", "Q", "[k", "]k", "Ik", "[kK", "]kK", "[kL", "k+",
                            "x", "xK", "x~", "x@", "x/", "x\\}", "[x", "]x", "Ix", "[xK", "]xK", "[xL", "x+",
                            "s", "sK", "s~", "s@", "S", "%", "[s", "]s", "Is", "[sK", "]sK", "[sL", "s+",
                            "X", "XK", "X~", "X@", "", "", "[X", "]X", "IX", "[XK", "]XK", "[XL", "X+",
                            "d", "dK", "t", "T", "D", "C", "[d", "]d", "Id", "[dK", "]dK", "[dL", "d+",
                            "N", "NK", "N~", "N@", "Z", "Z\\\\", "[N", "]N", "IN", "[NK", "]NK", "[NL", "N+",
                            "f", "fK", "f~", "f@", "F", "F\\\\", "[f", "]f", "If", "[fK", "]fK", "[fL", "f+",
                            "b", "bK", "b~", "b@", "B", "B\\\\", "[b", "]b", "Ib", "[bK", "]bK", "[bL", "b+",
                            "p", "pK", "p~", "p@", "p/", "^", "[p", "]p", "Ip", "[pK", "]pK", "[pL", "p+",
                            "m", "mK", "m~", "m@", "M", "J", "[m", "]m", "Im", "[mK", "]mK", "[mL", "m+",
                            "w", "wK", "w~", "w@", "w/", "*", "[w", "]w", "Iw", "[wK", "]wK", "[wL", "w+",
                            "r", "rK", "r~", "r@", "g", "G", "[r", "]r", "Ir", "[rK", "]rK", "[rL", "r+",
                            "l", "lK", "l~", "l@", "'", "'\\\\", "[l", "]l", "Il", "[lK", "]lK", "[lL", "l+",
                            "v", "vK", "v~", "v@", "v/", "#", "[v", "]v", "Iv", "[vK", "]vK", "[vL", "v+",
                            ";", ";K", ";~", ";@", "h", "H", "[;", "];", "I;", "[;K", "];K", "[;L", ";+",
                            "L", "LK", "L~", "L@", "\"", "$", "[L", "]L", "IL", "[LK", "]LK", "[LL", "L+",
                            "R", "RK", "R~", "R@", "V", "V\\\\", "[R", "]R", "IR", "[RK", "]RK", "[RL", "R+",
                            "n", "nK", "n~", "n@", "z", "z\\\\", "[n", "]n", "In", "[nK", "]nK", "[nL", "n+",

                            "c", "cK", "c~", "c@", "c`", "c\\{", "[c", "]c", "Ic", "[cK", "]cK", "[cL", "c+",
                            ":", ":K", ":~", ":@", ":`", ":\\{", "[:", "]:", "I:", "[:K", "]:K", "[:L", ":+",
                            "j", "jK", "j~", "j@", "j`", "j\\{", "[j", "]j", "Ij", "[jK", "]jK", "[jL", "j+",
                            "P", "PK", "P~", "P@", "P`", "P\\{", "[P", "]P", "IP", "[PK", "]PK", "[PL", "P+",
                            "", "", "", "", "", "", "", "", "", "", "", "", "",
                            "W"
                          };

        string[] ambika = {"bullet", "'b6", "'df", "'ae", "'a9", "'99", "'b4", "'a8", "u8800?", "'c6", "'d8", "'c6\\u8710?", "'a3",
                              "u8721?", "u8721?\\'cb", "u8721?\\'c8", "u8721?\\'cd", "A", "B", "'d2\\u8721?", "u63743?\\u8721?", "'88\\u8721?", "'d2\\u8721?\\'cb", "u63743?\\u8721?\\'cb", "'d2\\u8721?\\u8710?", "'bb",
                              "u8719?", "u8719?\\'cb", "u8719?\\'cf", "u8719?\\'cd", "'e5", "'e7", "'d2\\u8719?", "u63743?\\u8719?", "'88\\u8719?", "'d2\\u8719?\\'cb", "u63743?\\u8719?\\'cb", "'d2\\u8719?\\u8710?", "'85",
                              "u960?", "u960?\\'cb", "u960?\\'c8", "u960?\\'cd", "C", "N", "'d2\\u960?", "u63743?\\u960?", "'88\\u960?", "'d2\\u960?\\'cb", "u63743?\\u960?\\'cb", "'d2\\u960?\\u8710", "'c0",
                              "u8747?", "u8747?\\'cb", "u8747?\\'c8", "u8747?\\'cd", "E", "E\\u305?", "'d2\\u8747?", "u63743?\\u8747?", "'88\\u8747?", "'d2\\u8747?\\'cb", "u63743?\\u8747?\\'cb", "'d2\\u8747?\\u8710?", "rquote",
                              "'aa", "'aa\\'cb", "F", "G", "H", "I", "'d2\\'aa", "u63743?\\'aa", "'88\\'aa", "'d2\\'aa\\'cb", "u63743?\\'aa\\'cb", "'d2\\'aa\\u8710?", "u64258?",
                              "'ba", "'ba\\'cb", "'ba\\'c8", "'ba\\'cd", "P", "P\\u305?", "'d2\\'ba", "u63743?\\'ba", "'88\\'ba", "'d2\\'ba\\'cb", "u63743?\\'ba\\'cb", "'d2\\'ba\\u8710?", "]",
                              "u8486?", "u8486?\\'cb", "u8486?\\'c8", "u8486?\\'cd", "Q", "Q\\u305?", "'d2\\u8486?", "u63743?\\u8486?", "'88\\u8486?", "'d2\\u8486?\\'cb", "u63743?\\u8486?\\'cb", "'d2\\u8486?\\u8710?", "'8b",
                              "'e6", "'e6\\'cb", "'e6\\'c8", "'e6\\'cd", "R", "R\\u305?", "'d2\\'e6", "u63743?\\'e6", "'88\\'e6", "'d2\\'e6\\'cb", "u63743?\\'e6\\'cb", "'d2\\'e6\\u8710?", "'9b",
                              "'f8", "'f8\\'cb", "'f8\\'cf", "'f8\\'cd", "'e9", "'e8", "'d2\\'f8", "u63743?\\'f8", "'88\\'f8", "'d2\\'f8\\'cb", "u63743?\\'f8\\'cb", "'d2\\'f8\\u8710?", "u64257?",
                              "'bf", "'bf\\'cb", "'bf\\'c8", "'bf\\'cd", "S", "T", "'d2\\'bf", "u63743?\\'bf", "'88\\'bf", "'d2\\'bf\\'cb", "u63743?\\'bf\\'cb", "'d2\\'bf\\u8710?", "'c3",
                              "'a1", "'a1\\'cb", "'a1\\'cf", "'a1\\'cd", "'fa", "'f9", "'d2\\'a1", "u63743?\\'a1", "'88\\'a1", "'d2\\'a1\\'cb", "u63743?\\'a1\\'cb", "'d2\\'a1\\u8710?", "'d5",
                              "'ac", "'ac\\'cb", "U", "V", "W", "X", "'d2\\'ac", "u63743?\\'ac", "'88\\'ac", "'d2\\'ac\\'cb", "u63743?\\'ac\\'cb", "'d2\\'ac\\u8710?", "'8c",
                              "u8730?", "u8730?\\'cb", "u8730?\\'c8", "u8730?\\'cd", "Y", "Y\\u305?", "'d2\\u8730?", "u63743?\\u8730?", "'88\\u8730?", "'d2\\u8730?\\'cb", "u63743?\\u8730?\\'cb", "'d2\\u8730?\\u8710?", "'9c",
                              "'b5", "'b5\\'cb", "'b5\\'cf", "'b5\\'cd", "'fb", "'fc", "'d2\\'b5", "u63743?\\'b5", "'88\\'b5", "'d2\\'b5\\'cb", "u63743?\\'b5\\'cb", "'d2\\'b5\\u8710?", "'87",
                              "u8776?", "u8776?\\'cb", "u8776?\\'c8", "u8776?\\'cd", "Z", "d", "'d2\\u8776?", "u63743?\\u8776?", "'88\\u8776?", "'d2\\u8776?\\'cb", "u63743?\\u8776?\\'cb", "'d2\\u8776?\\u8710?", "'f7", 
                              "u8710?", "u8710?\\'cb", "u8710?\\'c8", "u8710?\\'cd", "e", "f", "'d2\\u8710?", "u63743?\\u8710?", "'88\\u8710?", "'d2\\u8710?\\'cb", "u63743?\\u8710?\\'cb", "'d2\\u8710?\\u8710?", "'89",       
                              "'ab", "'ab\\'cb", "'ab\\'c8", "'ab\\'cd", "^", "^\\u305?", "'d2\\'ab", "u63743?\\'ab", "'88\\'ab", "'d2\\'ab\\'cb", "u63743?\\'ab\\'cb", "'d2\\'ab\\u8710?", "u9674?",
                              "u8706?", "u8706?\\'cb", "u8706?\\'c8", "u8706?\\'cd", "a", "a\\'fd", "'d2\\u8706?", "u63743?\\u8706?", "'88\\u8706?", "'d2\\u8706?\\'cb", "u63743?\\u8706?\\'cb", "'d2\\u8706?\\u8710?", "'ff",

                              "z", "z\\'cb", "z\\'c8", "z\\'cd", "z\\'db", "z\\'d9", "'d2z", "u63743?z", "'88z", "'d2z\\'cb", "u63743?z\\'cb", "'d2z\\u8710?", "'82",
                              "y", "y\\'cb", "y\\'c8", "y\\'cd", "y\\'db", "y\\'d9", "'d2y", "u63743?y", "'88y", "'d2y\\'cb", "u63743?y\\'cb", "'d2y\\u8710?", "'b7",
                              "m", "m\\'cb", "m\\'c8", "m\\'cd", "m\\'db", "m\\'d9", "'d2m", "u63743?m", "'88m", "'d2m\\'cb", "u63743?m\\'cb", "'d2m\\u8710?", "'9f",
                              "|", "|\\'cb", "|\\'c8", "|\\'cd", "|\\'db", "|\\'d9", "'d2|", "u63743?|", "'88|", "'d2|\\'cb", "u63743?|\\'cb", "'d2|\\u8710?", "'84",
                              "u8260?", "u8260?\\'cb", "u8260?\\'c8", "u8260?\\'cd", "u8260?\\'db", "u8260?\\'d9", "'d2\\u8260?", "u63743?\\u8260?", "'88\\u8260?", "'d2\\u8260?\\'cb", "u63743?\\u8260?\\'cb", "'d2\\u8260?\\u8710?", "",
                              "'a7"
                           };

        string[] unicode = {"u2949?", "u2950?", "u2951?", "u2952?", "u2953?", "u2954?", "u2958?", "u2959?", "u2960?", "u2962?", "u2963?", "u2964?", "u2947?", 
                             "u2965?", "u2965?\\u3006?", "u2965?\\u3007?", "u2965?\\u3008?", "u2965?\\u3009?", "u2965?\\u3010?", "u2965?\\u3014?", "u2965?\\u3015?", "u2965?\\u3016?", "u2965?\\u3018?", "u2965?\\u3019?", "u2965?\\u3020?", "u2965?\\u3021?", 
                             "u2969?", "u2969?\\u3006?", "u2969?\\u3007?", "u2969?\\u3008?", "u2969?\\u3009?", "u2969?\\u3010?", "u2969?\\u3014?", "u2969?\\u3015?", "u2969?\\u3016?", "u2969?\\u3018?", "u2969?\\u3019?", "u2969?\\u3020?", "u2969?\\u3021?", 
                             "u2970?", "u2970?\\u3006?", "u2970?\\u3007?", "u2970?\\u3008?", "u2970?\\u3009?", "u2970?\\u3010?", "u2970?\\u3014?", "u2970?\\u3015?", "u2970?\\u3016?", "u2970?\\u3018?", "u2970?\\u3019?", "u2970?\\u3020?", "u2970?\\u3021?", 
                             "u2974?", "u2974?\\u3006?", "u2974?\\u3007?", "u2974?\\u3008?", "u2974?\\u3009?", "u2974?\\u3010?", "u2974?\\u3014?", "u2974?\\u3015?", "u2974?\\u3016?", "u2974?\\u3018?", "u2974?\\u3019?", "u2974?\\u3020?", "u2974?\\u3021?", 
                             "u2975?", "u2975?\\u3006?", "u2975?\\u3007?", "u2975?\\u3008?", "u2975?\\u3009?", "u2975?\\u3010?", "u2975?\\u3014?", "u2975?\\u3015?", "u2975?\\u3016?", "u2975?\\u3018?", "u2975?\\u3019?", "u2975?\\u3020?", "u2975?\\u3021?", 
                             "u2979?", "u2979?\\u3006?", "u2979?\\u3007?", "u2979?\\u3008?", "u2979?\\u3009?", "u2979?\\u3010?", "u2979?\\u3014?", "u2979?\\u3015?", "u2979?\\u3016?", "u2979?\\u3018?", "u2979?\\u3019?", "u2979?\\u3020?", "u2979?\\u3021?", 
                             "u2980?", "u2980?\\u3006?", "u2980?\\u3007?", "u2980?\\u3008?", "u2980?\\u3009?", "u2980?\\u3010?", "u2980?\\u3014?", "u2980?\\u3015?", "u2980?\\u3016?", "u2980?\\u3018?", "u2980?\\u3019?", "u2980?\\u3020?", "u2980?\\u3021?", 
                             "u2984?", "u2984?\\u3006?", "u2984?\\u3007?", "u2984?\\u3008?", "u2984?\\u3009?", "u2984?\\u3010?", "u2984?\\u3014?", "u2984?\\u3015?", "u2984?\\u3016?", "u2984?\\u3018?", "u2984?\\u3019?", "u2984?\\u3020?", "u2984?\\u3021?", 
                             "u2986?", "u2986?\\u3006?", "u2986?\\u3007?", "u2986?\\u3008?", "u2986?\\u3009?", "u2986?\\u3010?", "u2986?\\u3014?", "u2986?\\u3015?", "u2986?\\u3016?", "u2986?\\u3018?", "u2986?\\u3019?", "u2986?\\u3020?", "u2986?\\u3021?", 
                             "u2990?", "u2990?\\u3006?", "u2990?\\u3007?", "u2990?\\u3008?", "u2990?\\u3009?", "u2990?\\u3010?", "u2990?\\u3014?", "u2990?\\u3015?", "u2990?\\u3016?", "u2990?\\u3018?", "u2990?\\u3019?", "u2990?\\u3020?", "u2990?\\u3021?", 
                             "u2991?", "u2991?\\u3006?", "u2991?\\u3007?", "u2991?\\u3008?", "u2991?\\u3009?", "u2991?\\u3010?", "u2991?\\u3014?", "u2991?\\u3015?", "u2991?\\u3016?", "u2991?\\u3018?", "u2991?\\u3019?", "u2991?\\u3020?", "u2991?\\u3021?", 
                             "u2992?", "u2992?\\u3006?", "u2992?\\u3007?", "u2992?\\u3008?", "u2992?\\u3009?", "u2992?\\u3010?", "u2992?\\u3014?", "u2992?\\u3015?", "u2992?\\u3016?", "u2992?\\u3018?", "u2992?\\u3019?", "u2992?\\u3020?", "u2992?\\u3021?", 
                             "u2994?", "u2994?\\u3006?", "u2994?\\u3007?", "u2994?\\u3008?", "u2994?\\u3009?", "u2994?\\u3010?", "u2994?\\u3014?", "u2994?\\u3015?", "u2994?\\u3016?", "u2994?\\u3018?", "u2994?\\u3019?", "u2994?\\u3020?", "u2994?\\u3021?", 
                             "u2997?", "u2997?\\u3006?", "u2997?\\u3007?", "u2997?\\u3008?", "u2997?\\u3009?", "u2997?\\u3010?", "u2997?\\u3014?", "u2997?\\u3015?", "u2997?\\u3016?", "u2997?\\u3018?", "u2997?\\u3019?", "u2997?\\u3020?", "u2997?\\u3021?", 
                             "u2996?", "u2996?\\u3006?", "u2996?\\u3007?", "u2996?\\u3008?", "u2996?\\u3009?", "u2996?\\u3010?", "u2996?\\u3014?", "u2996?\\u3015?", "u2996?\\u3016?", "u2996?\\u3018?", "u2996?\\u3019?", "u2996?\\u3020?", "u2996?\\u3021?", 
                             "u2995?", "u2995?\\u3006?", "u2995?\\u3007?", "u2995?\\u3008?", "u2995?\\u3009?", "u2995?\\u3010?", "u2995?\\u3014?", "u2995?\\u3015?", "u2995?\\u3016?", "u2995?\\u3018?", "u2995?\\u3019?", "u2995?\\u3020?", "u2995?\\u3021?", 
                             "u2993?", "u2993?\\u3006?", "u2993?\\u3007?", "u2993?\\u3008?", "u2993?\\u3009?", "u2993?\\u3010?", "u2993?\\u3014?", "u2993?\\u3015?", "u2993?\\u3016?", "u2993?\\u3018?", "u2993?\\u3019?", "u2993?\\u3020?", "u2993?\\u3021?", 
                             "u2985?", "u2985?\\u3006?", "u2985?\\u3007?", "u2985?\\u3008?", "u2985?\\u3009?", "u2985?\\u3010?", "u2985?\\u3014?", "u2985?\\u3015?", "u2985?\\u3016?", "u2985?\\u3018?", "u2985?\\u3019?", "u2985?\\u3020?", "u2985?\\u3021?", 
                             "u3000?", "u3000?\\u3006?", "u3000?\\u3007?", "u3000?\\u3008?", "u3000?\\u3009?", "u3000?\\u3010?", "u3000?\\u3014?", "u3000?\\u3015?", "u3000?\\u3016?", "u3000?\\u3018?", "u3000?\\u3019?", "u3000?\\u3020?", "u3000?\\u3021?", 
                             "u2999?", "u2999?\\u3006?", "u2999?\\u3007?", "u2999?\\u3008?", "u2999?\\u3009?", "u2999?\\u3010?", "u2999?\\u3014?", "u2999?\\u3015?", "u2999?\\u3016?", "u2999?\\u3018?", "u2999?\\u3019?", "u2999?\\u3020?", "u2999?\\u3021?", 
                             "u2972?", "u2972?\\u3006?", "u2972?\\u3007?", "u2972?\\u3008?", "u2972?\\u3009?", "u2972?\\u3010?", "u2972?\\u3014?", "u2972?\\u3015?", "u2972?\\u3016?", "u2972?\\u3018?", "u2972?\\u3019?", "u2972?\\u3020?", "u2972?\\u3021?", 
                             "u3001?", "u3001?\\u3006?", "u3001?\\u3007?", "u3001?\\u3008?", "u3001?\\u3009?", "u3001?\\u3010?", "u3001?\\u3014?", "u3001?\\u3015?", "u3001?\\u3016?", "u3001?\\u3018?", "u3001?\\u3019?", "u3001?\\u3020?", "u3001?\\u3021?", 
                             "u2965?\\u3021?\\u2999?", "u2965?\\u3021?\\u2999?\\u3006?", "u2965?\\u3021?\\u2999?\\u3007?", "u2965?\\u3021?\\u2999?\\u3008?", "u2965?\\u3021?\\u2999?\\u3009?", "u2965?\\u3021?\\u2999?\\u3010?", "u2965?\\u3021?\\u2999?\\u3014?", 
                                "u2965?\\u3021?\\u2999?\\u3015?", "u2965?\\u3021?\\u2999?\\u3016?", "u2965?\\u3021?\\u2999?\\u3018?", "u2965?\\u3021?\\u2999?\\u3019?", "u2965?\\u3021?\\u2999?\\u3020?", "u2965?\\u3021?\\u2999?\\u3021?", 
                             "u3000?\\u3021?\\u2992?\\u3008?", 
                            };

        string uottu = "u3006? u3007? u3008? u3009? u3010? u3014? u3015? u3016? u3018? u3019? u3020? u3021?";

        string OriginalText = "", PrevText = "" ;
      
        string title;
        string fullfname = "", fname = "";
        bool edit = false;

        public frm()
        {
            InitializeComponent();
            title = this.Text;

            //TamilFontConverter.AboutBox ab = new TamilFontConverter.AboutBox();
            //ab.ShowDialog();

            foreach (FontFamily font in System.Drawing.FontFamily.Families)
            {
                FontComboBox.Items.Add(font.Name);
            }
            FontComboBox.Text = rtb.SelectionFont.Name;
            IDataObject data = System.Windows.Forms.Clipboard.GetDataObject();
            if (data != null)
            {
                CpasteToolStripMenuItem.Enabled = true;
                PasteButton.Enabled = true;
            }       
        }

        private void NewToolStripMenuItem_Click(object sender, EventArgs e)
        {
            CloseToolStripMenuItem.Enabled = true;
            SaveToolStripMenuItem.Enabled = true;
            SaveAsToolStripMenuItem.Enabled = true;
            SaveButton.Enabled = true;
            SaveAsButton.Enabled = true;
            rtb.Rtf = "";
            rtb.Show();
            this.Text = title;
            FontComboBox.Text = rtb.SelectionFont.Name;
        }

        private void ExitToolStripMenuItem_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void OpenToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (rtb.Text != "" & rtb.Visible & edit == true)
            {
                 DialogResult ans = MessageBox.Show("Do you want to ingnore the existing content?", "Ignore Content", 
                    MessageBoxButtons.YesNo, MessageBoxIcon.Warning);

                if (ans == DialogResult.No)
                    return;
                rtb.Text = "";
                this.Text = title;
            }

            CloseToolStripMenuItem.Enabled = true;
            SaveToolStripMenuItem.Enabled = true;
            SaveAsToolStripMenuItem.Enabled = true;
            SaveButton.Enabled = true;
            SaveAsButton.Enabled = true;
            PrevText = "";

            OpenFileDialog ofd = new OpenFileDialog();

            ofd.Filter = "Rich Text Files|*.rtf";
            DialogResult result = ofd.ShowDialog();
            
            if (result == DialogResult.OK && ofd.FileName.Length > 0)
            {
                fullfname = ofd.FileName;
                try
                {
                    rtb.LoadFile(fullfname, RichTextBoxStreamType.RichText);
                    fname = fullfname.Substring(fullfname.LastIndexOf('\\') + 1);
                    this.Text = this.Text + " - [" + fname + "]";
                }
                catch
                {
                    MessageBox.Show("Unable to open the file! May be already in use!", "File Open Error");
                }
            }
            rtb.Show();
            FontComboBox.Text = rtb.SelectionFont.Name;
        }

        private void CloseToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (rtb.Text != "" & edit == true)
            {
                DialogResult result = MessageBox.Show("Do you want to ignore the existing content?", "Ignore Content",
                    MessageBoxButtons.YesNo, MessageBoxIcon.Warning);
                if (result == DialogResult.No)
                    return;
            }            
            CloseToolStripMenuItem.Enabled = false;
            SaveToolStripMenuItem.Enabled = false;
            SaveAsToolStripMenuItem.Enabled = false;
            SaveButton.Enabled = false;
            SaveAsButton.Enabled = false;
            rtb.Hide();
        }

        private void SaveToolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (fullfname == "")
                SaveAsToolStripMenuItem_Click(sender, e);
            else
                rtb.SaveFile(fullfname, RichTextBoxStreamType.RichText);
        }

        private void SaveAsToolStripMenuItem_Click(object sender, EventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();

            sfd.DefaultExt = "*.rtf";
            sfd.Filter = "Rich Text Files|*.rtf";
            DialogResult result = sfd.ShowDialog();

            if (result == DialogResult.OK && sfd.FileName.Length > 0)
            {
                fullfname = sfd.FileName;
                rtb.SaveFile(fullfname);
                fname = fullfname.Substring(fullfname.LastIndexOf('\\') + 1);
                this.Text = title + " - [" + fname + "]";
                edit = false;
            }
        }

        private void EdittoolStripMenuItem_Click(object sender, EventArgs e)
        {
            if (rtb.SelectionLength != 0)
            {
                CutToolStripMenuItem.Enabled = true;
                CopyToolStripMenuItem.Enabled = true;
                CutButton.Enabled = true;
                CopyButton.Enabled = true;
            }
            else
            {
                CutToolStripMenuItem.Enabled = false;
                CopyToolStripMenuItem.Enabled = false;
                CutButton.Enabled = false;
                CopyButton.Enabled = false;
            }

            IDataObject data = System.Windows.Forms.Clipboard.GetDataObject();
            if (data != null)
            {
                CpasteToolStripMenuItem.Enabled = true;
                PasteButton.Enabled = true;
            }
            else
            {
                CpasteToolStripMenuItem.Enabled = false;
                PasteButton.Enabled = false;
            }

            if (rtb.Text.Length == 0)
            {
                SelectAllToolStripMenuItem.Enabled = false;
                SelectAllButton.Enabled = false;
            }
            else
            {
                SelectAllToolStripMenuItem.Enabled = true;
                SelectAllButton.Enabled = true;
            }
        }

        private void UndoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtb.Undo();
        }

        private void RedoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtb.Redo();
        }

        private void CutToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtb.Cut();
        }

        private void CopyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtb.Copy();
        }

        private void PasteToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                string st = Clipboard.GetData(DataFormats.Rtf).ToString();
                st = st.Replace("Arial Unicode MS Western", "Arial Unicode MS");
                Clipboard.SetText(st, TextDataFormat.Rtf);
                rtb.Paste();
            }
            catch
            {
                rtb.Paste();
            }
            rtb.SelectionStart = 0;
            FontComboBox.Text = rtb.SelectionFont.Name;

                SaveToolStripMenuItem.Enabled = true;
                SaveAsToolStripMenuItem.Enabled = true;
                SelectAllToolStripMenuItem.Enabled = true;
                SaveButton.Enabled = true;
                SaveAsButton.Enabled = true;               
                SelectAllButton.Enabled = true;
        }

        private void SelectAllToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtb.SelectAll();
            CutButton.Enabled = true;
            CopyButton.Enabled = true;
        }

        private void CUndoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtb.Undo();
        }

        private void CRedoToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtb.Redo();
        }

        private void CcutToolStripMenuItem_Click(object sender, EventArgs e)
        {
            CutToolStripMenuItem_Click(sender, e);
        }

        private void CcopyToolStripMenuItem_Click(object sender, EventArgs e)
        {
            CopyToolStripMenuItem_Click(sender, e);
        }

        private void CpasteToolStripMenuItem_Click(object sender, EventArgs e)
        {
            PasteToolStripMenuItem_Click(sender, e);
        }

        private void CselectallToolStripMenuItem_Click(object sender, EventArgs e)
        {
            SelectAllToolStripMenuItem_Click(sender, e);
        }

        private void contextMenuStrip1_Opening(object sender, CancelEventArgs e)
        {
            if (rtb.SelectionLength == 0)
            {
                CcutToolStripMenuItem.Enabled = false;
                CcopyToolStripMenuItem.Enabled = false;
            }
            else
            {
                CcutToolStripMenuItem.Enabled = true;
                CcopyToolStripMenuItem.Enabled = true;
            }

            IDataObject data = System.Windows.Forms.Clipboard.GetDataObject();
            if (data != null)
                CpasteToolStripMenuItem.Enabled = true;
            else
                CpasteToolStripMenuItem.Enabled = false;

            if (rtb.Text.Length == 0)
                CselectallToolStripMenuItem.Enabled = false;
            else
                CselectallToolStripMenuItem.Enabled = true;
        }

        private void ZoomInToolStripMenuItem_Click(object sender, EventArgs e)
        {
            float zf = rtb.ZoomFactor;
            rtb.ZoomFactor = zf + 0.1f;
        }

        private void ZoomOutToolStripMenuItem_Click(object sender, EventArgs e)
        {
            float zf = rtb.ZoomFactor;
            rtb.ZoomFactor = zf - 0.1f;
        }

        private void ChangeBackColor_Click(object sender, EventArgs e)
        {
            ColorDialog cd = new ColorDialog();
            cd.AllowFullOpen = true;
            cd.AnyColor = true;
            cd.Color = rtb.BackColor;
            DialogResult result = cd.ShowDialog();
            if (result == DialogResult.OK)
                rtb.BackColor = cd.Color;
        }

        private void FontColor_Click(object sender, EventArgs e)
        {
            ColorDialog cd = new ColorDialog();
            cd.AllowFullOpen = true;
            cd.AnyColor = true;
            cd.Color = rtb.ForeColor;
            DialogResult result = cd.ShowDialog();
            if (result == DialogResult.OK)
                rtb.ForeColor = cd.Color;
        }

        private void PlainTextToolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtb.SaveFile("tempin.rtf", RichTextBoxStreamType.RichText);
            rtb.LoadFile("tempin.rtf", RichTextBoxStreamType.PlainText);
            File.Delete("tempin.rtf");

            FontComboBox.Text = rtb.SelectionFont.Name;
        }

        private void RichTexttoolStripMenuItem_Click(object sender, EventArgs e)
        {
            rtb.Rtf = rtb.Text;
            FontComboBox.Text = rtb.SelectionFont.Name;
        }

        private void UseHelpToolStripMenuItem_Click(object sender, EventArgs e)
        {
            TamilFontConverter.HelpForm hf = new TamilFontConverter.HelpForm();
            hf.Show();
        }

        private void AboutToolStripMenuItem_Click(object sender, EventArgs e)
        {
            TamilFontConverter.AboutBox ab = new TamilFontConverter.AboutBox();
            ab.Show();
        }

        public void Convert(string font)
        {
            int n = 0, num = 0, m = 0;
            int len, pos, jump;
            char ch, ftype;
            string fontname = "", fontnum = "", fonttype = "", partst = "", fontstr = "", nextstr = "";
            string tletter = "", uletter = "", marker;
            string content;
            string st = "";

            rtb.SaveFile("tempin.rtf", RichTextBoxStreamType.RichText);
            StreamReader sr = new StreamReader("tempin.rtf");
            StreamWriter sw = new StreamWriter("tempout.rtf");
            st = sr.ReadToEnd();
            OriginalText = st;

            pos = st.IndexOf("}}") + 2;
            string fonttable = st.Substring(0, pos);
            len = fonttable.Length - 3;
            pos = fonttable.IndexOf(" ") + 1;

            if (fonttable.IndexOf(font) < 0 & fonttable.IndexOf(font.ToUpper()) < 0 & fonttable.IndexOf("SUNDARAM") < 0 & 
                fonttable.IndexOf("Ka") < 0 & fonttable.IndexOf("Ids") < 0 & fonttable.IndexOf("Baamini") < 0 & fonttable.IndexOf("Kruti") < 0 &
                fonttable.IndexOf("SunTommy") < 0)
            {
                sr.Close();
                sw.Close();
                goto NoMatch;
            }

            while (pos < len)
            {
                while ((ch = fonttable[pos]) != ';')
                {
                    fontname = fontname + ch;
                    pos += 1;
                }

                if (fontname.IndexOf("SUNDARAM") == 0)
                {
                    st = st.Replace(fontname, "STMZH - 001");
                    fontname = "STMZH - 001";
                }
                else if (fontname.IndexOf("Ka") == 0 | fontname.IndexOf("Ids") == 0)
                {
                    st = st.Replace(fontname, "JF Aadhi");
                    fontname = "JF Aadhi";
                }
                else if (fontname.IndexOf("Baamini") == 0 | fontname.IndexOf("SunTommy") == 0)
                {
                    st = st.Replace(fontname, "Bamini");
                    fontname = "Bamini";
                }
                else if (fontname.IndexOf("Kruti") == 0)
                {
                    st = st.Replace(fontname, "Tamil-Aiswarya");
                    fontname = "Tamil-Aiswarya";
                }

                if (fontname.IndexOf(font) == 0 | fontname.IndexOf(font.ToUpper()) == 0)
                {
                    st = st.Replace("fcharset2", "fcharset0");
                    st = st.Replace(fontname, "Arial Unicode MS");
                    fonttype = fonttype + "T";
                }
                else
                    fonttype = fonttype + "E";
             
                fontname = "";
                fontstr = fontstr + "\\f" + num + " ";
                fontnum = fontnum + num;
                num += 1;

                partst = fonttable.Substring(pos);
                jump = partst.IndexOf(" ") + 1;
                pos += jump;
            }

            pos = st.IndexOf("}}") + 2;
            sw.Write(st.Substring(0, pos));
            content = st.Substring(pos);

            pos = content.IndexOf("\\f0");
            sw.Write(content.Substring(0, pos + 2));
            content = content.Substring(pos + 2);
            if (font == "Ambika")
                content = content.Replace("u937?", "u8486?");
            //MessageBox.Show(content);
            //MessageBox.Show(font);

            num = 0;

            while (num < content.Length)
            {
                char nextchar = content[num + 1];
                string fontno = "";
                if (Char.IsDigit(nextchar))
                {
                    fontno = fontno + content[num] + content[num + 1];
                    num += 1;
                }
                else
                    fontno = fontno + content[num];

                sw.Write(fontno);
                num += 1;
                m = System.Convert.ToInt32(fontno);

                try
                {
                    ftype = fonttype[m];
                }
                catch
                {
                    break;
                }

                char next;
                switch (ftype)
                {
                    case 'E':

                        while (num < content.Length)
                        {
                            ch = content[num];
                            if (ch == '\\')
                            {
                                next = content[num + 1];
                                if (next == '\\')
                                {
                                    sw.Write("\\\\");
                                    num += 2;
                                }
                                else if (next == 'f')
                                {
                                    nextstr = content.Substring(num, 3);

                                    if (nextstr == "\\fs")
                                    {
                                        sw.Write("\\fs");
                                        sw.Write(content[num + 3]);
                                        sw.Write(content[num + 4]);
                                        num += 5;
                                    }
                                    else if (nextstr == "\\fi")
                                    {
                                        sw.Write("\\fi");
                                        num += 3;
                                    }
                                    else
                                    {
                                        sw.Write("\\f");
                                        num += 2;
                                        break;
                                    }
                                }
                                else
                                {
                                    sw.Write(content[num]);
                                    num += 1;
                                }
                            }
                            else
                            {
                                sw.Write(content[num]);
                                num += 1;
                            }
                        }
                        break;

                    case 'T':

                        font = font.ToUpper();
                        while (num < content.Length)
                        {
                            ch = content[num];
                            if (ch == '\\')
                            {                          
                                next = content[num + 1];
                                if (next == 'p')
                                {
                                    if (content.Substring(num, 5) == "\\pard")
                                    {
                                        sw.Write("\\pard");
                                        num += 5;
                                    }
                                    else if (content.Substring(num, 5) == "\\page")
                                    {
                                        sw.Write("\\page");
                                        num += 5;
                                    }
                                    else if (content.Substring(num, 4) == "\\par")
                                    {
                                        sw.Write("\\par");
                                        num += 4;
                                    }
                                }
                                else if (next == 'q')
                                {
                                    sw.Write(content.Substring(num, 3));
                                    num += 3;
                                }
                                else if (next == 'n')
                                {                                   
                                    if (content.Substring(num, 12) == "\\nowidctlpar")
                                    {
                                        sw.Write("\\nowidctlpar");
                                        num += 12;
                                    }
                                    else if (content.Substring(num, 11) == "\\nosupersub")
                                    {
                                        sw.Write("\\nosupersub");
                                        num += 11;
                                    }
                                    else
                                    {
                                        sw.Write("\\n");
                                        num += 2;
                                    }
                                }
                                else if (next == 'h')
                                {
                                    if (content.Substring(num, 8) == "\\hyphpar")
                                    {
                                        sw.Write("\\hyphpar");
                                        num += 8;
                                    }
                                    else if (content.Substring(num, 10) == "\\highlight")
                                    {
                                        sw.Write("\\highlight");
                                        num += 10;
                                    }
                                    else
                                    {
                                        sw.Write("\\h");
                                        num += 2;
                                    }
                                }
                                else if (next == 's')
                                {
                                    if (content.Substring(num, 3) == "\\sa")
                                    {
                                        sw.Write("\\sa");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 3) == "\\sb")
                                    {
                                        sw.Write("\\sb");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 7) == "\\slmult")
                                    {
                                        sw.Write("\\slmult");
                                        num += 7;
                                    }
                                    else if (content.Substring(num, 3) == "\\sl")
                                    {
                                        sw.Write("\\sl");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 4) == "\\sub")
                                    {
                                        sw.Write("\\sub");
                                        num += 4;
                                    }
                                    else if (content.Substring(num, 6) == "\\super")
                                    {
                                        sw.Write("\\super");
                                        num += 6;
                                    }
                                    else if (content.Substring(num, 7) == "\\strike")
                                    {
                                        sw.Write("\\strike");
                                        num += 7;
                                    }
                                    else
                                    {
                                        sw.Write("\\s");
                                        num += 2;
                                    }
                                }
                                else if (next == 'k')
                                {
                                    if (content.Substring(num, 6) == "\\keepn")
                                    {
                                        sw.Write("\\keepn");
                                        num += 6;
                                    }
                                    else if (content.Substring(num, 5) == "\\keep")
                                    {
                                        sw.Write("\\keep");
                                        num += 5;
                                    }
                                    else
                                    {
                                        sw.Write("\\k");
                                        num += 2;
                                    }
                                }
                                else if (next == 'l')
                                {
                                    if (content.Substring(num, 5) == "\\line")
                                    {
                                        sw.Write("\\line");
                                        num += 5;
                                    }
                                    else if (content.Substring(num, 3) == "\\li")
                                    {
                                        sw.Write("\\li");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 7) == "\\lquote")
                                    {
                                        sw.Write("\\lquote");
                                        num += 7;
                                    }
                                    else if (content.Substring(num, 10) == "\\ldblquote")
                                    {
                                        sw.Write("\\ldblquote");
                                        num += 10;
                                    }
                                    else if (content.Substring(num, 7) == "\\ltrpar")
                                    {
                                        sw.Write("\\ltrpar");
                                        num += 7;
                                    }
                                    else
                                    {
                                        sw.Write("\\lang");
                                        num += 5;
                                    }
                                }
                                else if (next == 'b')
                                {
                                    if (content.Substring(num, 8) == "\\brdrbtw")
                                    {
                                        sw.Write(content.Substring(num, 8));
                                        num += 8;
                                    }
                                    else if (content.Substring(num, 8) == "\\brdrdot")
                                    {
                                        sw.Write(content.Substring(num, 8));
                                        num += 8;
                                    }
                                    else if (content.Substring(num, 7) == "\\bullet")
                                    {
                                        if (font == "AMBIKA")
                                            sw.Write("\\u2949?");
                                        else if (font == "SHREE")
                                            sw.Write("\\u2990?\\u3009?");
                                        else
                                            sw.Write("\\bullet");

                                        if (content[num + 7] == ' ')
                                            num += 8;
                                        else
                                            num += 7;
                                    }
                                    else if (content.Substring(num, 3) == "\\br")
                                    {
                                        sw.Write(content.Substring(num, 6));
                                        num += 6;
                                    }
                                    else
                                    {
                                        sw.Write("\\b");
                                        num += 2;
                                        next = content[num];
                                    }
                                }
                                else if (next == 'i')
                                {
                                    sw.Write("\\i");
                                    num += 2;
                                    next = content[num];
                                }
                                else if (next == 'v')
                                {
                                    sw.Write("\\v");
                                    num += 2;
                                    next = content[num];
                                }
                                else if (next == '\\')
                                {
                                    if (font == "SHREE")
                                    {
                                        sw.Write("\\u2970?");
                                        num += 2;
                                    }
                                    else if (font == "SVC" | font == "JF")
                                    {
                                        sw.Write("\\u2993?");
                                        num += 2;
                                    }
                                    else if (font == "STMZH")
                                    {
                                        if (content[num + 2] == '\'' | content[num + 2] == 'V' | content[num + 2] == 'f' | content[num + 2] == 'l' | content[num + 2] == 'p')
                                        {
                                            sw.Write("\\u2990?");
                                            num += 1;
                                        }
                                        else
                                        {
                                            sw.Write("\\u2990?");
                                            num += 2;
                                        }
                                    }
                                    else if (font == "BAMINI" | font == "SURIYAN")
                                    {
                                        sw.Write("\\u2999?");
                                        num += 2;
                                        char nextch = content[num];
                                        switch (nextch)
                                        {
                                            case 'h':
                                                sw.Write("\\u3006?");
                                                num += 1;
                                                break;

                                            case 'p':
                                                sw.Write("\\u3007?");
                                                num += 1 ;
                                                break;

                                            case 'P':
                                                sw.Write("\\u3008?");
                                                num += 1;
                                                break;

                                            case '&':
                                                sw.Write("\\u3009?");
                                                num += 1;
                                                break;

                                            case '\\':
                                                if (content[num + 1] == '{')
                                                {
                                                    sw.Write("\\u3009?");
                                                    num += 2;
                                                }
                                                break;

                                            case '_':
                                            case '@':
                                                sw.Write("\\u3010?");
                                                num += 1;
                                                break;

                                            case ';':
                                                sw.Write("\\u3021?");
                                                num += 1;
                                                break;
                                        }
                                    }
                                    else if (font == "TAMIL")
                                    {
                                        sw.Write("\\u2990?\\u3010?");
                                        num += 2;
                                    }
                                    else
                                    {
                                        sw.Write("\\\\");
                                        num += 2;
                                    }
                                }
                                else if (next == 'f')
                                {
                                    if (content.Substring(num, 3) == "\\fs")
                                    { 
                                        sw.Write("\\fs");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 3) == "\\fi")
                                    {
                                        sw.Write("\\fi");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 7) == "\\f1\\'fe" & font == "TSC")
                                    {
                                        sw.Write("\\u2951?");
                                        num += 7;
                                    }
                                    else
                                    {
                                        sw.Write("\\" + next);
                                        num += 2;
                                        break;
                                    }
                                }
                                else if (next == 'r')
                                {
                                    if (content.Substring(num, 3) == "\\ri")
                                    {
                                        sw.Write("\\ri");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 4) == "\\row")
                                    {
                                        sw.Write("\\row");
                                        num += 4;
                                    }
                                    else if (content.Substring(num, 7) == "\\rquote")
                                    {
                                        if (font == "AMBIKA")
                                            sw.Write("\\u2974?\\u3021?");
                                        else
                                            sw.Write("\\rquote");
                                        num += 7;
                                    }
                                    else if (content.Substring(num, 10) == "\\rdblquote")
                                    {
                                        sw.Write("\\rdblquote");
                                        num += 10;
                                    }
                                    else
                                    {
                                        sw.Write("\\r");
                                        num += 2;
                                    }
                                }
                                else if (next == 'c')
                                {
                                    if (content.Substring(num, 5) == "\\caps")
                                    {
                                        sw.Write("\\caps");
                                        num += 5;
                                    }
                                    else if (content.Substring(num, 5) == "\\cell")
                                    {
                                        sw.Write("\\cell");
                                        num += 5;
                                    }
                                    else if (content.Substring(num, 3) == "\\cf")
                                    {
                                        sw.Write("\\cf");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 6) == "\\cbpat")
                                    {
                                        sw.Write("\\cbpat");
                                        num += 6;
                                    }
                                    else
                                    {
                                        sw.Write("\\c");
                                        num += 2;
                                    }
                                }
                                else if (next == 'd')
                                {
                                    if (content.Substring(num, 3) == "\\dn")
                                    {
                                        sw.Write("\\dn");
                                        num += 3;
                                    }
                                    else
                                    {
                                        sw.Write("\\d");
                                        num += 2;
                                    }
                                }
                                else if (next == 't')
                                {
                                    if (content.Substring(num, 4) == "\\tab")
                                    {
                                        sw.Write("\\tab");
                                        num += 4;
                                    }
                                    else if (content.Substring(num, 4) == "\\tqr")
                                    {
                                        sw.Write("\\tqr");
                                        num += 4;
                                    }
                                    else if (content.Substring(num, 4) == "\\tqc")
                                    {
                                        sw.Write("\\tqc");
                                        num += 4;
                                    }
                                    else if (content.Substring(num, 3) == "\\tx")
                                    {
                                        sw.Write("\\tx");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 6) == "\\tldot")
                                    {
                                        sw.Write("\\tldot");
                                        num += 6;
                                    }
                                    else if (content.Substring(num, 7) == "\\tlhyph")
                                    {
                                        sw.Write("\\tlhyph");
                                        num += 7;
                                    }
                                    else if (content.Substring(num, 6) == "\\trowd")
                                    {
                                        jump = content.IndexOf("\\intbl", num) + 6;
                                        sw.Write(content.Substring(num, jump - num));
                                        num = jump;
                                    }
                                    else
                                    {
                                        sw.Write("\\t");
                                        num += 2;
                                    }
                                }
                                else if (next == 'e')
                                {
                                    if (content.Substring(num, 8) == "\\expndtw")
                                    {
                                        sw.Write("\\expndtw");
                                        num += 8;
                                    }
                                    else
                                    {
                                        sw.Write("\\e");
                                        num += 2;
                                    }
                                }
                                else if (next == '-' & (font == "SVC" | font == "JF"))
                                {
                                    sw.Write("\\u2994?\\u3007?");
                                    num += 2;
                                }
                                else if (next == '-' & (font == "LT-TM" | font == "VANAVIL"))
                                {
                                    num += 2;
                                }
                                else if (next == 'V' & font == "STMZH")
                                {
                                    sw.Write("\\u2990?\\u3006?");
                                    num += 2;
                                }
                                else if (next == ' ' & font == "STMZH")
                                {
                                    sw.Write("\\u2990?" + " ");
                                    num += 2;
                                }
                                else if (next == 'u')
                                {                                  
                                    if (content.Substring(num, 7) == "\\ulnone")
                                    {
                                        sw.Write("\\ulnone");
                                        num += 7;
                                    }
                                    else if (content.Substring(num, 5) == "\\ulth")
                                    {
                                        sw.Write("\\ulth");
                                        num += 5;
                                    }
                                    else if (content.Substring(num, 3) == "\\ul")
                                    {
                                        sw.Write("\\ul");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 3) == "\\uc")
                                    {
                                        sw.Write("\\uc");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 3) == "\\up")
                                    {
                                        sw.Write("\\up");
                                        num += 3;
                                    }
                                    else if (font == "TAC")
                                    {
                                        string taceletter = content.Substring(num + 1, 7);
                                        for (n = 0; n <= 312; n++)
                                            if (taceletter == (tace[n])) break;
                                        if (n > 312)
                                            uletter = taceletter;
                                        else
                                            uletter = "\\" + unicode[n];

                                        sw.Write(uletter);
                                        num += 8;
                                    }
                                    else if (font == "AMBIKA")
                                    {
                                        string ot = "";

                                        if (content.Substring(num + 1, 4) == "u960")
                                        {
                                            tletter = content.Substring(num + 1, 5);
                                            ot = content.Substring(num + 7, 3);

                                            if (ot == "'cb" | ot == "'cd" | ot == "'cf" | ot == "'c8" | ot == "'db" | ot == "'d9")
                                            {
                                                tletter = tletter + "\\" + ot;
                                                num += 10;
                                            }
                                            else
                                            {
                                                num += 6;
                                            }
                                        }
                                        else if (content.Substring(num + 1, 5) == "u9674")
                                        {
                                            tletter = "u9674?";
                                            num += 7;
                                        }
                                        else if (content[num + 2] == '8')
                                        {
                                            tletter = content.Substring(num + 1, 6);
                                            ot = content.Substring(num + 8, 3);
                                            num += 7;
                                            if (ot == "'cb" | ot == "'cd" | ot == "'cf" | ot == "'c8" | ot == "'db" | ot == "'d9")
                                            {
                                                tletter = tletter + "\\" + ot;
                                                num += 4;
                                            }
                                        }
                                        else if (content.Substring(num + 2, 2) == "63")
                                        {
                                            if (content.Substring(num + 9, 2) == "u9")
                                            {
                                                if (content.Substring(num + 15, 3) == "'cb")
                                                {
                                                    tletter = content.Substring(num + 1, 17);
                                                    num += 18;
                                                }
                                                else
                                                {
                                                    tletter = content.Substring(num + 1, 13);
                                                    num += 14;
                                                }
                                            }
                                            else if (content.Substring(num + 9, 2) == "u8")
                                            {
                                                if (content.Substring(num + 16, 3) == "'cb")
                                                {
                                                    tletter = content.Substring(num + 1, 18);
                                                    num += 19;
                                                }
                                                else
                                                {
                                                    tletter = content.Substring(num + 1, 14);
                                                    num += 15;
                                                }
                                            }
                                            else if (content[num + 9] == '\'')
                                            {
                                                if (content.Substring(num + 13, 3) == "'cb")
                                                {
                                                    tletter = content.Substring(num + 1, 15);
                                                    num += 16;
                                                }
                                                else
                                                {
                                                    tletter = content.Substring(num + 1, 11);
                                                    num += 12;
                                                }
                                            }
                                            else if (content[num + 8] == 'J' | content[num + 8] == '_' | content[num + 8] == '`')
                                            {
                                                if (content[num + 8] == 'J')
                                                    tletter = "u63743?\\'ba\\'cb";
                                                else if (content[num + 8] == '_')
                                                    tletter = "u63743?\\'ab\\'cb";
                                                else if (content[num + 8] == '`')
                                                    tletter = "u63743?\\u8706?\\'cb";
                                                num += 9;
                                            }
                                            else
                                            {
                                                if (content.Substring(num + 10, 3) == "'cb")
                                                {
                                                    tletter = content.Substring(num + 1, 12);
                                                    num += 13;
                                                }
                                                else
                                                {
                                                    tletter = content.Substring(num + 1, 8);
                                                    num += 9;
                                                }
                                            }
                                        }
                                        else if (content.Substring(num + 2, 2) == "64")
                                        {
                                            tletter = content.Substring(num + 1, 7);
                                            num += 8;
                                        }

                                        if (tletter.IndexOf("[") >= 0)
                                            tletter = tletter.Replace("[", "\\u8486?");

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == (ambika[n])) break;
                                        if (n <= 312)
                                            uletter = "\\" + unicode[n];
                                        else
                                            uletter = tletter;

                                        sw.Write(uletter);
                                    }
                                    else if (font == "STMZH")
                                    {
                                        sw.Write("\\u2990?\\u2993?\\u3021?");
                                        num += 2;
                                    }
                                    else
                                    {
                                        sw.Write("\\u");
                                        num += 2;
                                    }
                                }
                                else if (next == '{')
                                {
                                    if (font == "SHREE")
                                        sw.Write("\\u2984?\\u3007?");
                                    else if (font == "VANAVIL")
                                        sw.Write("\\u2972?\\u3021?");
                                    else if (font == "LT-TM")
                                        sw.Write("\\u2972?\\u3021?");
                                    else if (font == "STMZH")
                                        sw.Write("\\u2963?");
                                    num += 2;
                                }
                                else if (next == '}')
                                {
                                    if (font == "SHREE")
                                        sw.Write("\\u2984?\\u3008?");
                                    else if (font == "VANAVIL")
                                        sw.Write("\\u2985?\\u3010?");
                                    else if (font == "LT-TM")
                                        sw.Write("\\u2985?\\u3010?");
                                    num += 2;
                                }
                                else if (next != '\'' & font == "STMZH")
                                {
                                    sw.Write("\\u2990?");
                                    num += 1;
                                }
                                else
                                {
                                    tletter = content.Substring(num + 1, 3);
                                    string ottu = content.Substring(num + 5, 3);
                                    switch (font)
                                    {
                                        case "TAM":

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (tam[n])) break;

                                            if (n < 312 & n % 13 == 0 & (ottu == "'a3" | ottu == "'a7" | ottu == "'a8"))
                                            {
                                                tletter = content.Substring(num + 1, 7);
                                                num += 8;
                                            }
                                            else if (n == 9 & ottu == "'f7")
                                            {
                                                tletter = content.Substring(num + 1, 7);
                                                num += 8;
                                            }
                                            else
                                            {
                                                switch (tletter)
                                                {
                                                    case "'ac":
                                                        tletter = content.Substring(num + 1, 7);
                                                        num += 8;
                                                        break;

                                                    case "'aa":
                                                        marker = content.Substring(num + 9, 3);
                                                        if (marker == "'a3" | marker == "'f7")
                                                        {
                                                            tletter = content.Substring(num + 1, 11);
                                                            num += 12;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 7);
                                                            num += 8;
                                                        }
                                                        break;

                                                    case "'ab":
                                                        marker = content.Substring(num + 9, 3);
                                                        if (marker == "'a3")
                                                        {
                                                            tletter = content.Substring(num + 1, 11);
                                                            num += 12;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 7);
                                                            num += 8;
                                                        }
                                                        break;

                                                    default:
                                                        num += 4;
                                                        break;
                                                }
                                            }
                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (tam[n])) break;
                                            if (n > 312)
                                                if (tletter == "'d2" | tletter == "'d3")
                                                    uletter = "\"";
                                                else if (tletter == "'d4" | tletter == "'d5")
                                                    uletter = "'";
                                                else
                                                    uletter = tletter;
                                            else
                                                uletter = "\\" + unicode[n];

                                            sw.Write(uletter);
                                            break;

                                        case "TAB":

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (tab[n])) break;

                                            string ottu2 = content.Substring(num + 9, 3);

                                            if (n > 12 & (n % 13 == 0) & (ottu == "'a3" | ottu == "'a4" | ottu == "'a6" | ottu == "'a7" | ottu == "'a8" | ottu == "'a2"))
                                            {
                                                tletter = content.Substring(num + 1, 7);
                                                num += 8;
                                            }
                                            else if (n == 9 & ottu == "'f7" & ottu2 != "'a3" & ottu2 != "'a4" & ottu2 != "'a6" & ottu2 != "'a2")
                                            {
                                                tletter = content.Substring(num + 1, 7);
                                                num += 8;
                                            }
                                            else
                                            {
                                                switch (tletter)
                                                {
                                                    case "'ac":
                                                        tletter = content.Substring(num + 1, 7);
                                                        num += 8;
                                                        break;

                                                    case "'a3":
                                                        marker = content.Substring(num + 5, 3);
                                                        if (marker == "'a2")
                                                            tletter = "\\u2992?\\u3021?";
                                                        else if (marker == "'a4")
                                                            tletter = "\\u2992?\\u3007?";
                                                        num += 8;
                                                        break;

                                                    case "'aa":
                                                        marker = content.Substring(num + 9, 3);
                                                        string nextltr = content.Substring(num + 13, 3);
                                                        if ((marker == "'a3" | marker == "'f7") & !(nextltr == "'a3" | nextltr == "'a4" | nextltr == "'a6" | nextltr == "'a2"))
                                                        {
                                                            tletter = content.Substring(num + 1, 11);
                                                            num += 12;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 7);
                                                            num += 8;
                                                        }
                                                        break;

                                                    case "'ab":
                                                        marker = content.Substring(num + 9, 3);
                                                        if (marker == "'a3")
                                                        {
                                                            tletter = content.Substring(num + 1, 11);
                                                            num += 12;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 7);
                                                            num += 8;
                                                        }
                                                        break;

                                                    default:
                                                        num += 4;
                                                        break;
                                                }
                                            }
                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (tab[n])) break;

                                            if (n <= 312)
                                                uletter = "\\" + unicode[n];
                                            else if (n > 312 & tletter == "'a2")
                                                uletter = "\\u3021?";
                                            else if (n > 312 & tletter == "'a4")
                                                uletter = "\\u3007?";
                                            else
                                                uletter = tletter;

                                            sw.Write(uletter);
                                            break;

                                        case "TSC":

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (tscii[n])) break;

                                            string ottottu = content.Substring(num + 9, 3);

                                            if (n < 312 & n % 13 == 0 & (ottu == "'a1"))
                                            {
                                                if (ottottu == "'a2" | ottottu == "'a3")
                                                {
                                                    tletter = content.Substring(num + 1, 3);
                                                    num += 4;
                                                }
                                                else
                                                {
                                                    tletter = content.Substring(num + 1, 7);
                                                    num += 8;
                                                }
                                            }
                                            else if (n < 312 & n % 13 == 0 & (ottu == "'a2" | ottu == "'a3" | ottu == "'a4" | ottu == "'a5"))
                                            {
                                                tletter = content.Substring(num + 1, 7);
                                                num += 8;
                                            }
                                            else
                                            {
                                                marker = content.Substring(num + 9, 3);
                                                string markernext = content.Substring(num + 13, 3);
                                                switch (tletter)
                                                {
                                                    case "'a8":
                                                        tletter = content.Substring(num + 1, 7);
                                                        num += 8;
                                                        break;

                                                    case "'a6":
                                                        if (marker == "'a1" | marker == "'aa")
                                                        {
                                                            if (markernext == "'a2" | markernext == "'a3")
                                                            {
                                                                tletter = content.Substring(num + 1, 7);
                                                                num += 8;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 11);
                                                                num += 12;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 7);
                                                            num += 8;
                                                        }
                                                        break;

                                                    case "'a7":
                                                        if (marker == "'a1")
                                                        {
                                                            if (markernext == "'a2" & markernext == "'a3")
                                                            {
                                                                tletter = content.Substring(num + 1, 7);
                                                                num += 8;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 11);
                                                                num += 12;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 7);
                                                            num += 8;
                                                        }
                                                        break;

                                                    default:
                                                        num += 4;
                                                        break;
                                                }
                                            }

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (tscii[n])) break;

                                            if (n <= 312)
                                                uletter = "\\" + unicode[n];
                                            else if (tletter == "'a1")
                                                uletter = "\\u2992?";
                                            else if (tletter == "'a2")
                                                uletter = "\\u3007?";
                                            else if (tletter == "'a3")
                                                uletter = "\\u3008?";
                                            else
                                                uletter = tletter;

                                            sw.Write(uletter);
                                            break;

                                        case "SHREE":

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (shreelipi[n])) break;

                                            if (n < 312 & n % 13 == 0 & (ottu == "'f5" | ottu == "'fa" | ottu == "'fc"))
                                            {
                                                tletter = content.Substring(num + 1, 7);
                                                num += 8;
                                            }
                                            else
                                            {
                                                string s = content.Substring(num + 4, 2);
                                                switch (tletter)
                                                {
                                                    case "'f8":
                                                        if (s == "\\'")
                                                        {
                                                            tletter = content.Substring(num + 1, 7);
                                                            num += 8;
                                                        }
                                                        else if (s == "\\\\")
                                                        {
                                                            tletter = content.Substring(num + 1, 5);
                                                            num += 6;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 4);
                                                            num += 5;
                                                        }
                                                        break;

                                                    case "'f6":
                                                        if (s == "\\'")
                                                        {
                                                            marker = content.Substring(num + 9, 3);
                                                            if (marker == "'f5" | marker == "'cd")
                                                            {
                                                                tletter = content.Substring(num + 1, 11);
                                                                num += 12;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 7);
                                                                num += 8;
                                                            }
                                                        }
                                                        else if (s == "\\\\")
                                                        {
                                                            marker = content.Substring(num + 7, 3);
                                                            if (marker == "'f5" | marker == "'cd")
                                                            {
                                                                tletter = content.Substring(num + 1, 9);
                                                                num += 10;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            marker = content.Substring(num + 6, 3);
                                                            if (marker == "'f5" | marker == "'cd")
                                                            {

                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 4);
                                                                num += 5;
                                                            }
                                                        }
                                                        break;

                                                    case "'f7":
                                                        if (s == "\\'")
                                                        {
                                                            marker = content.Substring(num + 9, 3);
                                                            if (marker == "'f5")
                                                            {
                                                                tletter = content.Substring(num + 1, 11);
                                                                num += 12;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 7);
                                                                num += 8;
                                                            }
                                                        }
                                                        else if (s == "\\\\")
                                                        {
                                                            marker = content.Substring(num + 7, 3);
                                                            if (marker == "'f5")
                                                            {
                                                                tletter = content.Substring(num + 1, 9);
                                                                num += 10;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            marker = content.Substring(num + 6, 3);
                                                            if (marker == "'f5")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 4);
                                                                num += 5;
                                                            }
                                                        }
                                                        break;

                                                    default:
                                                        num += 4;
                                                        break;
                                                }
                                            }

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (shreelipi[n])) break;
                                            if (n <= 312)
                                                uletter = "\\" + unicode[n];
                                            else if (tletter == "'f5")
                                            {
                                                uletter = "\\u3006?";
                                            }
                                            else if (tletter == "'88")
                                            {
                                                uletter = "\\u3059?";
                                            }
                                            else if (tletter == "'fe")
                                            {
                                                uletter = "\\u3064?";
                                            }
                                            else if (tletter == "'99")
                                            {
                                                uletter = "\\u3065?";
                                            }
                                            else if (tletter == "'84")
                                            {
                                                uletter = "\\u3057?";
                                            }
                                            else
                                            {
                                                uletter = tletter;
                                            }

                                            sw.Write(uletter);
                                            break;

                                        case "VANAVIL":

                                            ottu = content.Substring(num + 4, 1);

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (vanavil[n])) break;

                                            if (n < 312 & n % 13 == 0 & (ottu == "h" | ottu == "&" | ottu == "]"))
                                            {
                                                tletter = content.Substring(num + 1, 4);
                                                num += 5;
                                            }
                                            else
                                                num += 4;


                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (vanavil[n])) break;

                                            if (n <= 312)
                                                uletter = "\\" + unicode[n];
                                            else
                                                uletter = tletter;

                                            sw.Write(uletter);
                                            break;

                                        case "SVC":

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (softview[n])) break;

                                            if (n < 312 & n % 13 == 0 & (ottu == "'f4" | ottu == "'fd" | ottu == "'fe"))
                                            {
                                                tletter = content.Substring(num + 1, 7);
                                                num += 8;
                                            }
                                            else
                                            {
                                                string s = content.Substring(num + 4, 2);
                                                switch (tletter)
                                                {
                                                    case "'fb":

                                                        if (s == "\\\\")
                                                        {
                                                            tletter = content.Substring(num + 1, 5);
                                                            num += 6;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 4);
                                                            num += 5;
                                                        }
                                                        break;

                                                    case "'f9":

                                                        if (s == "\\\\")
                                                        {
                                                            if (content.Substring(num + 6, 3) == "'f4")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else if (content[num + 6] == '[')
                                                            {
                                                                tletter = content.Substring(num + 1, 6);
                                                                num += 7;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (content.Substring(num + 6, 3) == "'f4")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else if (content[num + 5] == '[')
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 4);
                                                                num += 5;
                                                            }
                                                        }
                                                        break;

                                                    case "'fa":

                                                        if (s == "\\\\")
                                                        {
                                                            if (content.Substring(num + 6, 3) == "'f4")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (content.Substring(num + 6, 3) == "'f4")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 4);
                                                                num += 5;
                                                            }
                                                        }
                                                        break;

                                                    /*case "'2d":
                                                        tletter = "-";
                                                        break;*/

                                                    default:
                                                        num += 4;
                                                        break;
                                                }
                                            }

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (softview[n])) break;
                                            if (n <= 312)
                                                uletter = "\\" + unicode[n];
                                            else if (tletter == "'f4")
                                            {
                                                uletter = "\\u3006?";
                                            }
                                            else
                                            {
                                                uletter = tletter;
                                            }

                                            sw.Write(uletter);
                                            break;

                                        case "LT-TM":

                                            ottu = content.Substring(num + 4, 1);

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (lttm[n])) break;

                                            if (n < 312 & n % 13 == 0 & (ottu == "h" | ottu == "&" | ottu == "]"))
                                            {
                                                tletter = content.Substring(num + 1, 4);
                                                num += 5;
                                            }
                                            else
                                                num += 4;


                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (lttm[n])) break;

                                            if (n <= 312)
                                                uletter = "\\" + unicode[n];
                                            else if (tletter == "'b0")
                                                uletter = "\\u3000?\\u3021?";
                                            else if (tletter == "'b3")
                                                uletter = "\\u3064?";
                                            else if (tletter == "'b6")
                                                uletter = "\\u182?";
                                            else if (tletter == "'b2")
                                                uletter = "\\u3059?";
                                            else if (tletter == "'b5")
                                                uletter = "\\u3060?";
                                            else if (tletter == "'d2")
                                                uletter = " ";
                                            else
                                                uletter = tletter;

                                            sw.Write(uletter);
                                            break;

                                        case "STMZH":

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (senthamizh[n])) break;

                                            if (n < 312 & n % 13 == 0 & (content[num + 4] == 'V'))
                                            {
                                                tletter = content.Substring(num + 1, 4);
                                                num += 5;
                                            }
                                            else
                                            {
                                                string s = content.Substring(num + 4, 2);
                                                switch (tletter)
                                                {
                                                    case "'e7":
                                                        if (s == "\\'")
                                                        {
                                                            tletter = content.Substring(num + 1, 7);
                                                            num += 8;
                                                        }
                                                       else if (s == "\\ ")
                                                        {
                                                            
                                                           tletter = "'e7\\\\";
                                                            num += 5;
                                                        }
                                                       else if (s == "\\\\")
                                                        {
                                                            
                                                           tletter = "'e7\\\\";
                                                          /* if (content[num + 6] == '\'' | content[num + 6] == 'p' | content[num + 6] == 'f')
                                                               num += 4;
                                                           else*/
                                                               num += 5;
                                                        }
                                                        else if (s == "\\e")
                                                        {
                                                            if (content.Substring(num + 13, 2) == "\\'")
                                                            {
                                                                tletter = "'e7" + content.Substring(13, 4);
                                                                num += 17;
                                                            }
                                                            else
                                                            {
                                                                tletter = "'e7" + content[num + 14];
                                                                num += 15;
                                                            }
                                                        }
                                                        else if (content[num + 4] == '\\')
                                                        {

                                                            tletter = "'e7\\\\";
                                                                num += 5;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 4);
                                                            num += 5;
                                                        }
                                                        break;

                                                    case "'d8":
                                                        if (s == "\\'")
                                                        {
                                                            marker = content.Substring(num + 9, 3);
                                                            if (marker == "'e1")
                                                            {
                                                                tletter = content.Substring(num + 1, 11);
                                                                num += 12;
                                                            }
                                                            else if (content[num + 8] == 'V')
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 7);
                                                                num += 8;
                                                            }
                                                        }
                                                        else if (s == "\\ ")
                                                        {

                                                            tletter = "'d8\\\\";
                                                            num += 5;
                                                        }
                                                        else if (s == "\\\\")
                                                        {

                                                            tletter = "'d8\\\\";
                                                            if (content[num + 6] == '\'' | content[num + 6] == 'p')
                                                                num += 5;
                                                            else
                                                                num += 6;
                                                        }
                                                        else if (content[num + 4] == '\\')
                                                        {

                                                            tletter = "'d8\\\\";
                                                            num += 5;
                                                        }
                                                        else
                                                        {
                                                            marker = content.Substring(num + 6, 3);
                                                            if (marker == "'e1")
                                                            {

                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else if (content[num + 5] == 'V')
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 4);
                                                                num += 5;
                                                            }
                                                        }
                                                        break;

                                                    case "'bc":
                                                        if (s == "\\'")
                                                        {
                                                            marker = content.Substring(num + 9, 3);
                                                            if (marker == "'e1")
                                                            {
                                                                tletter = content.Substring(num + 1, 11);
                                                                num += 12;
                                                            }
                                                            else if (content[num + 8] == 'V')
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 7);
                                                                num += 8;
                                                            }
                                                        }
                                                        else if (s == "\\ ")
                                                        {

                                                            tletter = "'bc\\\\";
                                                            num += 5;
                                                        }
                                                        else if (s == "\\\\")
                                                        {

                                                            tletter = "'bc\\\\";
                                                            if (content[num + 6] == '\'' | content[num + 6] == 'p')
                                                                num += 5;
                                                            else
                                                                num += 6;
                                                        }
                                                        else if (s == "\\e")
                                                        {
                                                            tletter = "'bc\\'ef";
                                                            num += 17;
                                                        }
                                                        else if (content[num + 4] == '\\')
                                                        {
                                                            tletter = "'bc\\\\";
                                                            num += 5;
                                                        }
                                                        else
                                                        {
                                                            marker = content.Substring(num + 6, 3);
                                                            if (marker == "'e1")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else if (content[num + 5] == 'V')
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 4);
                                                                num += 5;
                                                            }
                                                        }
                                                        break;

                                                    default:
                                                        num += 4;
                                                        break;
                                                }
                                            }

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (senthamizh[n])) break;
                                            if (n <= 312)
                                                uletter = "\\" + unicode[n];
                                            else if (tletter == "'8a" | tletter == "'87")
                                                uletter = "\\f0 -";
                                            else if (tletter == "'e1")
                                                uletter = "\\u2995?";
                                            else if (tletter == "'e7\\'e1")
                                                uletter = "\\u2995?\\u3016?";
                                            else if (tletter == "'fa")
                                                uletter = "\\u2992?\\u3021?";
                                            else if (tletter == "'91" | tletter == "'92")
                                                uletter = "'";
                                            else if (tletter == "'93" | tletter == "'94")
                                                uletter = "\"";
                                            else
                                                uletter = tletter;

                                            sw.Write(uletter);
                                            //MessageBox.Show(uletter);
                                            break;

                                        case "JF":

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (jeeva[n])) break;

                                            if (n < 312 & n % 13 == 0 & (ottu == "'f4" | ottu == "'f7" | ottu == "'f8"))
                                            {
                                                tletter = content.Substring(num + 1, 7);
                                                num += 8;
                                            }
                                            else
                                            {
                                                string s = content.Substring(num + 4, 2);
                                                switch (tletter)
                                                {
                                                    case "'fb":

                                                        if (s == "\\\\")
                                                        {
                                                            tletter = content.Substring(num + 1, 5);
                                                            num += 6;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 4);
                                                            num += 5;
                                                        }
                                                        break;

                                                    case "'f9":

                                                        if (s == "\\\\")
                                                        {
                                                            if (content.Substring(num + 6, 3) == "'f4")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else if (content[num + 6] == '[')
                                                            {
                                                                tletter = content.Substring(num + 1, 6);
                                                                num += 7;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (content.Substring(num + 6, 3) == "'f4")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else if (content[num + 5] == '[')
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 4);
                                                                num += 5;
                                                            }
                                                        }
                                                        break;

                                                    case "'fa":

                                                        if (s == "\\\\")
                                                        {
                                                            if (content.Substring(num + 6, 3) == "'f4")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 5);
                                                                num += 6;
                                                            }
                                                        }
                                                        else
                                                        {
                                                            if (content.Substring(num + 6, 3) == "'f4")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 4);
                                                                num += 5;
                                                            }
                                                        }
                                                        break;

                                                    case "'e2":
                                                        tletter = "-";
                                                        num += 4;
                                                        break;

                                                    default:
                                                        num += 4;
                                                        break;
                                                }
                                            }

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (jeeva[n])) break;
                                            if (n <= 312)
                                                uletter = "\\" + unicode[n];
                                            else if (tletter == "'f4")
                                            {
                                                uletter = "\\u3006?";
                                            }
                                            else if (tletter == "'d0")
                                            {
                                                uletter = "!";
                                            }
                                            else if (tletter == "'a4")
                                            {
                                                uletter = "/";
                                            }
                                            else if (tletter == "'fc" | tletter == "'fd" |tletter == "'f5" | tletter == "'f6")
                                            {
                                                uletter = "'";
                                            }
                                            else if (tletter == "'f3")
                                            {
                                                uletter = "*";
                                            }
                                            else if (tletter == "'fe")
                                            {
                                                uletter = "\\u3010?";
                                            }
                                            else if (tletter == "'d2" | tletter == "'e4")
                                            {
                                                uletter = "\"";
                                            }
                                            else
                                            {
                                                uletter = tletter;
                                            }

                                            sw.Write(uletter);
                                            break;

                                        case "AMBIKA":
                                           
                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (ambika[n])) break;

                                            if (n < 312 & (n % 13 == 0) & (ottu == "'cb" | ottu == "'cd" | ottu == "'cf" | ottu == "'c8" | ottu == "'db" | ottu == "'d9"))
                                            {
                                                tletter = tletter + "\\" + ottu;
                                                num += 8;
                                            }
                                            else
                                            {
                                                switch (tletter)
                                                {
                                                    case "'88": 
                                                        //MessageBox.Show(tletter);
                                                        if (content[num + 5] == '\'')
                                                        {
                                                            tletter = content.Substring(num + 1, 7);
                                                            num += 8;
                                                        }
                                                        else if (content.Substring(num + 5, 2) == "u8")
                                                        {
                                                            tletter = content.Substring(num + 1, 10);
                                                            num += 11;
                                                        }
                                                        else if (content.Substring(num + 5, 2) == "u9")
                                                        {
                                                            tletter = content.Substring(num + 1, 9);
                                                            num += 10;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num + 1, 4);
                                                            num += 5;
                                                        }
                                                        break;


                                                    case "'d2":
                                                        //MessageBox.Show(tletter);
                                                        if (content[num + 5] == '\'')
                                                        {
                                                            if (content.Substring(num + 9, 3) == "'cb")
                                                            {
                                                                tletter = content.Substring(num + 1, 11);
                                                                num += 12;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 7);
                                                                num += 8;
                                                            }
                                                        }
                                                        else if (content.Substring(num + 5, 2) == "u8")
                                                        {
                                                            if (content.Substring(num + 12, 3) == "'cb")
                                                            {
                                                                tletter = content.Substring(num + 1, 14);
                                                                num += 15;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 10);
                                                                num += 11;
                                                            }
                                                        }
                                                        else if (content.Substring(num + 5, 2) == "u9")
                                                        {
                                                            if (content.Substring(num + 11, 3) == "'cb")
                                                            {
                                                                tletter = content.Substring(num + 1, 13);
                                                                num += 14;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 9);
                                                                num += 10;
                                                            }
                                                        }
                                                        else if (content[num + 4] == 'J')
                                                        {
                                                            tletter = "'d2\\'ba\\'cb";
                                                            num += 5;

                                                        }
                                                        else if (content[num + 4] == '_')
                                                        {
                                                                tletter = "'d2\\'ab\\'cb";
                                                                num += 5;

                                                        }
                                                        else if (content[num + 4] == '`')
                                                        {
                                                            tletter = "'d2\\u8706?\\'cb";
                                                            num += 5;

                                                        }
                                                        else
                                                        {
                                                            if (content.Substring(num + 6, 3) == "'cb")
                                                            {
                                                                tletter = content.Substring(num + 1, 8);
                                                                num += 9;
                                                            }
                                                            else
                                                            {
                                                                tletter = content.Substring(num + 1, 4);
                                                                num += 5;
                                                            }
                                                        }
                                                        break;

                                                    default:
                                                        num += 4;
                                                        break;
                                                }
                                            }

                                            if (tletter.IndexOf("[") >= 0)
                                                tletter = tletter.Replace("[", "\\u8486?");

                                            for (n = 0; n <= 312; n++)
                                                if (tletter == (ambika[n])) break;

                                            if (n <= 312)
                                                uletter = "\\" + unicode[n];
                                            else if (tletter == "'a4")
                                                uletter = "\\u2979?\\u3021?";
                                            else if (tletter == "'98")
                                                uletter = "\\u3021?";
                                            else if (tletter == "'eb" | tletter == "'ed")
                                                uletter = "'";
                                            else
                                                uletter = tletter;

                                            sw.Write(uletter);
                                            break;
                                    }
                                }
                            }
                            else if (ch == '{')
                            {
                                jump = content.IndexOf('}', num) + 1;
                                sw.Write(content.Substring(num, jump - num));
                                num = jump;
                            }
                            else
                            {
                                tletter = "" + ch;

                                switch (font)
                                {
                                    case "TAM":

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == tam[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else
                                        {
                                            /*if (tletter == "_")
                                                tletter = "-";*/
                                            sw.Write(tletter);
                                        }
                                        num += 1;
                                        break;

                                    case "TAB":

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == tab[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else
                                            sw.Write(tletter);
                                        num += 1;
                                        break;

                                    case "TAC":

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == tace[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else
                                            sw.Write(tletter);
                                        num += 1;
                                        break;

                                    case "TSC":

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == tscii[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else
                                            sw.Write(tletter);
                                        num += 1;
                                        break;

                                    case "SHREE":

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == shreelipi[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else if (n > 312 & ch == '"')
                                            sw.Write("'");
                                        else if (n > 312 & ch == '&')
                                            sw.Write("-");
                                        else if (n > 312 & ch == '@')
                                            sw.Write(":");
                                        else if (n > 312 & ch == 'N')
                                            sw.Write("\\u3060?");
                                        else if (n > 312 & ch == 'M')
                                            sw.Write("\\u3061?");
                                        else if (n > 312 & ch == 'O')
                                            sw.Write("\\u3066?");                                              
                                        else
                                            sw.Write(tletter);
                                        num += 1;
                                        break;

                                    case "VANAVIL":

                                        char ottu;
                                        try
                                        {
                                            ottu = content[num + 1];
                                        }
                                        catch
                                        {
                                            ottu = ' ';
                                        }

                                        if (ottu == 'h' | ottu == '&' | ottu == ']')
                                        {
                                            tletter = content.Substring(num, 2);
                                            num += 2;
                                        }
                                        else
                                        {

                                            switch (ch)
                                            {
                                                case 'i':
                                                    if (content[num + 1] == '\\')
                                                    {
                                                        tletter = content.Substring(num, 5);
                                                        num += 5;
                                                    }
                                                    else
                                                    {
                                                        tletter = "i" + content[num + 1];
                                                        num += 2;
                                                    }
                                                    break;

                                                case 'b':
                                                case 'n':
                                                    if (content[num + 1] == '\\')
                                                    {
                                                        if (content[num + 5] == 'h' | content[num + 5] == 's')
                                                        {
                                                            tletter = content.Substring(num, 6);
                                                            num += 6;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num, 5);
                                                            num += 5;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (content[num + 2] == 'h' | content[num + 2] == 's')
                                                        {
                                                            tletter = content.Substring(num, 3);
                                                            num += 3;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num, 2);
                                                            num += 2;
                                                        }
                                                    }
                                                    break;

                                                default:
                                                    num += 1;
                                                    break;
                                            }
                                        }
                                        for (n = 0; n <= 312; n++)
                                            if (tletter == vanavil[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else if (tletter == "`")
                                        {
                                            sw.Write("\\u2992?\\u3010?" + ".");
                                        }
                                        else
                                            sw.Write(tletter);

                                        break;

                                    case "BAMINI":
                                        char ottu1, ottu2, ottu3;
                                        string ottu22 = "";
                                        try
                                        {
                                            ottu1 = content[num + 1];
                                            ottu22 = content.Substring(num + 1, 2);
                                            ottu2 = content[num + 2];
                                            ottu3 = content[num + 3];
                                        }
                                        catch
                                        {
                                            ottu1 = ' ';
                                            ottu2 = ' ';
                                            ottu22 = "";
                                            ottu3 = ' ';
                                        }

                                        switch(ch)
                                        {
                                            case 'h':
                                                if (ottu1 == ';' | ottu1 == 'p' | ottu1 == 'P')
                                                {
                                                    tletter = "u" + ottu1; ;
                                                    num += 2;
                                                }
                                                else
                                                {
                                                    tletter = "h";
                                                    num += 1;
                                                }
                                                break;

                                            case 'i':

                                                if (ottu1 == '\\')
                                                {
                                                    tletter = "" + ch + "\\\\";
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    tletter = "" + ch + ottu1;
                                                    num += 2;
                                                }
                                                break;

                                            case 'n':
                                            case 'N':
                                                if (ottu1 == '\\')
                                                {
                                                    if ((ottu3 == 'h' | ottu3 == 's') & ottu3 != ';') 
                                                    {
                                                        tletter = "" + ch + "\\\\" + ottu3;
                                                        num += 4;
                                                    }
                                                    else
                                                    {
                                                        tletter = "" + ch + "\\\\";
                                                        num += 3;
                                                    }
                                                }
                                                else if ((ottu2 == 'h' | ottu2 == 's') & ottu3 != ';' & ottu3 != 'p' & ottu3 != 'P')
                                                {
                                                    tletter = content.Substring(num, 3);
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                break;

                                            default:

                                                if (ottu1 == 'h' & ottu2 != ';' & ottu2 != 'p' & ottu2 != 'P') 
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                else if (ottu1 == 'p' | ottu1 == 'P' | ottu1 == '_' | ottu1 == '+' | ottu1 == ';')
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                else if (ottu22 == "\\{" | ottu22 == "\\}")
                                                {
                                                    tletter = content.Substring(num, 3);
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    num += 1;
                                                }
                                                break;
                                        }
                                        for (n = 0; n <= 312; n++)
                                            if (tletter == bamini[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else if (n > 312 & ch == '>')
                                            sw.Write(",");
                                        else if (n > 312 & ch == '@')
                                            sw.Write(";");
                                        else if (n > 312 & ch == ';')
                                            sw.Write("\\u3021?");
                                        else if (n > 312 & ch == 'H')
                                            sw.Write("\\u2992?\\u3021?");
                                        else if (n > 312 & tletter == " ;")
                                            sw.Write(" \\u3021?");
                                        else
                                        {
                                            sw.Write(tletter);
                                        }
                                        break;

                                    case "SVC":

                                        string ottus = "";
                                        try
                                        {
                                            ottus = content.Substring(num + 2, 3);
                                        }
                                        catch
                                        {
                                        }

                                        if (ottus == "'f4" | ottus == "'fd" | ottus == "'fe")
                                        {
                                            tletter = content.Substring(num, 5);
                                            num += 4;
                                        }

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == (softview[n])) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else
                                            sw.Write(tletter);
                                        num += 1;
                                        break;

                                    case "LT-TM":

                                        try
                                        {
                                            ottu1 = content[num + 1];
                                            ottu2 = content[num + 2];
                                        }
                                        catch
                                        {
                                            ottu1 = ' ';
                                            ottu2 = ' ';
                                        }

                                        if (ottu1 == 'h' | ottu1 == '&' | ottu1 == ']')
                                        {

                                            string ugaramkuril = "|QJEYWD";
                                            if (ugaramkuril.IndexOf(ch) >= 0)
                                            {
                                                int index = ugaramkuril.IndexOf(ch);
                                                string[] ugaramnedil = {"'fa", "'fb", "'f6", "'fc", "'ff", "'f9", "}"};
                                                tletter = ugaramnedil[index];
                                            }
                                            else
                                                tletter = content.Substring(num, 2); 
                                            num += 2;
                                        }
                                        else
                                        {
                                            switch (ch)
                                            {                                              
                                                case 'i':
                                                    if (ottu1 == '\\')
                                                    {
                                                        tletter = content.Substring(num, 5);
                                                        num += 5;
                                                    }
                                                    else
                                                    {
                                                        tletter = "i" + content[num + 1];
                                                        num += 2;
                                                    }
                                                    break;

                                                case 'b':
                                                    if (ottu1 == '\\')
                                                    {
                                                        if (content[num + 5] == 'h' | content[num + 5] == 's')
                                                        {
                                                            tletter = content.Substring(num, 6);
                                                            num += 6;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num, 5);
                                                            num += 5;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (ottu2 == 'h' | ottu2 == 's')
                                                        {
                                                            tletter = content.Substring(num, 3);
                                                            num += 3;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num, 2);
                                                            num += 2;
                                                        }
                                                    }
                                                    break;

                                                case 'n':
                                                    if (ottu1 == '\\')
                                                    {
                                                        if (content[num + 5] == 'h')
                                                        {
                                                            tletter = content.Substring(num, 6);
                                                            num += 6;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num, 5);
                                                            num += 5;
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (ottu2 == 'h')
                                                        {
                                                            tletter = content.Substring(num, 3);
                                                            num += 3;
                                                        }
                                                        else
                                                        {
                                                            tletter = content.Substring(num, 2);
                                                            num += 2;
                                                        }
                                                    }
                                                    break;

                                                default:
                                                    num += 1;
                                                    break;
                                            }
                                        }
                                        for (n = 0; n <= 312; n++)
                                            if (tletter == lttm[n]) break;
                                        if (n <= 312)
                                            uletter = "\\" + unicode[n];
                                        else if (n > 312 & (tletter == " h" | ch == 'h'))
                                            uletter = "\\u3006?";
                                        else
                                            uletter = "" + ch;

                                        sw.Write(uletter);

                                        break;

                                    case "STMZH":

                                        char sottu;
                                        try
                                        {
                                            sottu = content[num + 1];
                                        }
                                        catch
                                        {
                                            sottu = ' ';
                                        }

                                        if (sottu == 'V' & ch != ' ')
                                        {
                                            tletter = content.Substring(num, 2);
                                            num += 1;
                                        }

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == senthamizh[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else if (ch == 'V')
                                            sw.Write("\\u3006?");
                                        else
                                            sw.Write(tletter);

                                        num += 1;
                                        break;

                                    case "JF":

                                        string ottuj = "";
                                        try
                                        {
                                            ottuj = content.Substring(num + 2, 3);
                                        }
                                        catch
                                        {
                                        }

                                        if (ottuj == "'f4" | ottuj == "'f7" | ottuj == "'f8")
                                        {
                                            tletter = content.Substring(num, 5);
                                            num += 4;
                                        }

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == (jeeva[n])) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else if (n > 312 & ch == '"')
                                            sw.Write("'");
                                        else
                                            sw.Write(tletter);
                                        num += 1;
                                        break;

                                    case "TAMIL":

                                        try
                                        {
                                            ottu1 = content[num + 1];
                                            ottu22 = content.Substring(num + 1, 2);
                                            ottu2 = content[num + 2];
                                            ottu3 = content[num + 3];
                                        }
                                        catch
                                        {
                                            ottu1 = ' ';
                                            ottu2 = ' ';
                                            ottu22 = "";
                                            ottu3 = ' ';
                                        }

                                        switch (ch)
                                        {
                                            case 'h':
                                                if (ottu1 == ';' | ottu1 == 'p' | ottu1 == 'P')
                                                {
                                                    tletter = "u" + ottu1; ;
                                                    num += 2;
                                                }
                                                else
                                                {
                                                    tletter = "h";
                                                    num += 1;
                                                }
                                                break;

                                            case 'i':

                                                tletter = "" + ch + ottu1;
                                                num += 2;
                                                break;

                                            case 'b':
                                            case 'n':

                                                if ((ottu2 == 'h' | ottu2 == 's') & ottu3 != ';' & ottu3 != 'p' & ottu3 != 'P')
                                                {
                                                    tletter = content.Substring(num, 3);
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                break;

                                            default:

                                                if (ottu1 == 'h' & ottu2 != ';' & ottu2 != 'p' & ottu2 != 'P')
                                                {
                                                    if ("`qJEYWD".IndexOf(ch) >= 0)
                                                        tletter = "" + ch + "\\}";
                                                    else
                                                        tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                else if ("pP[;%^".IndexOf(ottu1) >= 0)
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                else if (ottu22 == "\\{" | ottu22 == "\\}")
                                                {
                                                    tletter = content.Substring(num, 3);
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    num += 1;
                                                }
                                                break;
                                        }
                                        for (n = 0; n <= 312; n++)
                                            if (tletter == amudham[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else if (n > 312 & ch == '*')
                                            sw.Write("!");
                                        else if (n > 312 & ch == '>')
                                            sw.Write("?");
                                        else if (n > 312 & ch == '/')
                                            sw.Write(".");
                                        else if (n > 312 & ch == '.')
                                            sw.Write(",");
                                        else if (n > 312 & ch == ';')
                                            sw.Write("\\u3021?");
                                        else if (n > 312 & ch == 'H')
                                            sw.Write("\\u2992?\\u3021?");
                                        else if (n > 312 & tletter == " ;")
                                            sw.Write(" \\u3021?");
                                        else
                                        {
                                            sw.Write(tletter);
                                        }
                                        break;

                                    case "SURIYAN":

                                        try
                                        {
                                            ottu1 = content[num + 1];
                                            ottu22 = content.Substring(num + 1, 2);
                                            ottu2 = content[num + 2];
                                            ottu3 = content[num + 3];
                                        }
                                        catch
                                        {
                                            ottu1 = ' ';
                                            ottu2 = ' ';
                                            ottu22 = "";
                                            ottu3 = ' ';
                                        }

                                        switch (ch)
                                        {
                                            case 'h':
                                                if (ottu1 == ';' | ottu1 == 'p' | ottu1 == 'P')
                                                {
                                                    tletter = "u" + ottu1; ;
                                                    num += 2;
                                                }
                                                else
                                                {
                                                    tletter = "h";
                                                    num += 1;
                                                }
                                                break;

                                            case 'i':

                                                if (ottu1 == '\\')
                                                {
                                                    tletter = "" + ch + "\\\\";
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    tletter = "" + ch + ottu1;
                                                    num += 2;
                                                }
                                                break;

                                            case 'b':
                                            case 'n':
                                                if (ottu1 == '\\')
                                                {
                                                    if ((ottu3 == 'h' | ottu3 == 's') & ottu3 != ';') 
                                                    {
                                                        tletter = "" + ch + "\\\\" + ottu3;
                                                        num += 4;
                                                    }
                                                    else
                                                    {
                                                        tletter = "" + ch + "\\\\";
                                                        num += 3;
                                                    }
                                                }
                                                else if ((ottu2 == 'h' | ottu2 == 's') & ottu3 != ';' & ottu3 != 'p' & ottu3 != 'P')
                                                {
                                                    tletter = content.Substring(num, 3);
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                break;

                                            default:

                                              if (ottu1 == 'h' & ottu2 != ';' & ottu2 != 'p' & ottu2 != 'P')
                                                {
                                                    if ("`qJEYWD".IndexOf(ch) >= 0)
                                                        tletter = "" + ch + "\\}";
                                                    else
                                                        tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                else if ("pP[];&@".IndexOf(ottu1) >= 0)
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                else if (ottu22 == "\\{")
                                                {
                                                    tletter = content.Substring(num, 3);
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    num += 1;
                                                }
                                                break;
                                        }
                                        for (n = 0; n <= 312; n++)
                                            if (tletter == suriyan[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        /*  else if (n > 312 & ch == '*')
                                              sw.Write("!");
                                          else if (n > 312 & ch == '.')
                                              sw.Write(",");
                                          else if (n > 312 & ch == '>')
                                              sw.Write("?"); */
                                        else if (n > 312 & ch == '/')
                                            sw.Write(",");
                                        else if (n > 312 & ch == ';')
                                            sw.Write("\\u3021?");
                                        else if (n > 312 & ch == 'H')
                                            sw.Write("\\u2992?\\u3021?");
                                        else if (n > 312 & tletter == " ;")
                                            sw.Write(" \\u3021?");
                                        else
                                        {
                                            sw.Write(tletter);
                                        }
                                        break;

                                    case "CC":
                                        try
                                        {
                                            ottu1 = content[num + 1];
                                            ottu22 = content.Substring(num + 1, 2);
                                            ottu2 = content[num + 2];
                                            ottu3 = content[num + 3];
                                        }
                                        catch
                                        {
                                            ottu1 = ' ';
                                            ottu2 = ' ';
                                            ottu22 = "";
                                            ottu3 = ' ';
                                        }

                                        switch(ch)
                                        {
                                            case 'K':
                                                if (ottu1 == '+' | ottu1 == '~' | ottu1 == '@')
                                                {
                                                    tletter = "r" + ottu1; ;
                                                    num += 2;
                                                }
                                                else
                                                {
                                                    tletter = "K";
                                                    num += 1;
                                                }
                                                break;

                                            case 'I':
                                                tletter = "" + ch + ottu1;
                                                num += 2;
                                                break;

                                            case '[':
                                            case ']':
                                                if ((ottu2 == 'K') & ottu3 != '+' & ottu3 != '~' & ottu3 != '@')
                                                {
                                                    tletter = content.Substring(num, 3);
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                break;

                                            default:

                                                if (ottu1 == 'K' & ottu2 != '+' & ottu2 != '~' & ottu2 != '@') 
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                else if (ottu1 == '~' | ottu1 == '@' | ottu1 == '`' | ottu1 == '+' | ottu1 == '/')
                                                {
                                                    tletter = content.Substring(num, 2);
                                                    num += 2;
                                                }
                                                else if (ottu22 == "\\{" | ottu22 == "\\}" | ottu22 == "\\\\")
                                                {
                                                    tletter = content.Substring(num, 3);
                                                    num += 3;
                                                }
                                                else
                                                {
                                                    num += 1;
                                                }
                                                break;
                                        }
                                        for (n = 0; n <= 312; n++)
                                            if (tletter == cc[n]) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }  
                                        else if (n > 312 & tletter == "ZK")
                                            sw.Write("\\u2979?\\u3010?");
                                        else if (n > 312 & tletter == "FK")
                                            sw.Write("\\u2980?\\u3010?");
                                        else if (n > 312 & tletter == "BK")
                                            sw.Write("\\u2984?\\u3010?");
                                        else if (n > 312 & tletter == "'K")
                                            sw.Write("\\u2994?\\u3010?");
                                        else if (n > 312 & tletter == "VK")
                                            sw.Write("\\u2993?\\u3010?");
                                        else if (n > 312 & tletter == "zK")
                                            sw.Write("\\u2985?\\u3010?");
                                        else
                                            sw.Write(tletter);
                                        break;

                                    case "AMBIKA":

                                        string ot1 = "", ot2 = "";
                                        try
                                        {
                                            ot1 = content.Substring(num + 2, 3);
                                            ot2 = content.Substring(num + 1, 6);
                                        }
                                        catch
                                        {
                                        }

                                        if (ot1 == "'cb" | ot1 == "'c8" | ot1 == "'cf" | ot1 == "'cd" | ot1 == "'db" | ot1 == "'d9" | ot1 == "'fd")
                                        {
                                            tletter = content.Substring(num, 5);
                                            num += 4;
                                        }
                                        else if (ot2 == "\\u305?")
                                        {
                                            try
                                            {
                                                tletter = content.Substring(num, 7);
                                                num += 6;
                                            }
                                            catch
                                            {
                                            }
                                        }

                                        if (tletter.IndexOf("[") == 0)
                                            tletter = tletter.Replace("[", "u8486?");

                                        for (n = 0; n <= 312; n++)
                                            if (tletter == (ambika[n])) break;
                                        if (n <= 312)
                                        {
                                            uletter = "\\" + unicode[n];
                                            sw.Write(uletter);
                                        }
                                        else if (tletter == "J")
                                            sw.Write("\\u2979?\\u3006?");
                                        else if (tletter == "_")
                                            sw.Write("\\u2993?\\u3006?");
                                        else if (tletter == "`")
                                            sw.Write("\\u2985?\\u3006?");
                                        else
                                            sw.Write(tletter);

                                        num += 1;
                                        break;
                                }
                            }
                        }
                        break;
                }
            }
            sr.Close();
            sw.Close();

            rtb.LoadFile("tempout.rtf");
            FontComboBox.Text = rtb.SelectionFont.Name;
            this.Text = title;

            MessageBox.Show("Font encoding converted successfully!", "Success!");
            goto Match;

        NoMatch: 
            MessageBox.Show("Font encoding not matching!", "Error!");

        Match:
            try
            {
                //File.Delete("tempin.rtf");
                //File.Delete("tempout.rtf");
            }
            catch
            {
                MessageBox.Show("Unable to delete temporary files!", "File Deletion Error");
            }
        }

        public void Deconvert(string font)
        {
            int n = 0, num = 0, m = 0;
            int len, pos, jump;
            char ch, ftype;
            string fonttable, fontname = "", fontnum = "", fonttype = "", partst = "", fontstr = "", nextstr = "";
            string uletter = "", tletter = "", prevtletter = "";
            string content;
            string st;
            string s1, s2;

            rtb.SaveFile("tempin.rtf");
            StreamReader sr = new StreamReader("tempin.rtf");
            StreamWriter sw = new StreamWriter("tempout.rtf");
            st = sr.ReadToEnd();
            st = st.Replace("\\lang1097", "\\lang9");
            //st = st.Replace("\\cpg-8532", "");

            pos = st.IndexOf("}}") + 2;
            fonttable = st.Substring(0, pos);
            content = st.Substring(pos + 2);

            if (fonttable.IndexOf("Latha") < 0 & fonttable.IndexOf("Arial Unicode MS") < 0 & fonttable.IndexOf("Vijaya") < 0 
                & fonttable.IndexOf("TAU") < 0 & fonttable.IndexOf("Uni") < 0 & fonttable.IndexOf("Nirmala") < 0)
            {
                sr.Close();
                sw.Close();
                goto NoMatch;
            }

            if (font != "TAC")
            {

                if (st.IndexOf("Arial Unicode MS") > 0)
                {
                    s1 = fonttable.Substring(0, fonttable.IndexOf("Arial Unicode MS")) + "Arial Unicode MS";
                    s1 = s1.Replace("\\cpg-8532", "");
                    s2 = fonttable.Substring(fonttable.IndexOf("Arial Unicode MS") + 16);
                    if (s2.IndexOf("\\cpg-8532") < 0)
                    {
                        s2 = s2.Replace("Arial Unicode MS", "Calibri");
                        s2 = s2.Replace("Latha", "Calibri");
                    }
                    else
                        s2 = s2.Replace("\\cpg-8532", "");
                    fonttable = s1 + s2;
                }
                else if (st.IndexOf("Latha") > 0)
                {
                    s1 = st.Substring(0, st.IndexOf("Latha")) + "Latha";
                    s1 = s1.Replace("\\cpg-8532", "");
                    s2 = fonttable.Substring(fonttable.IndexOf("Latha") + 5);
                    if (s2.IndexOf("\\cpg-8532") < 0)
                    {
                        s2 = s2.Replace("Arial Unicode MS", "Calibri");
                        s2 = s2.Replace("Latha", "Calibri");
                    }
                    else
                        s2 = s2.Replace("\\cpg-8532", "");
                    fonttable = s1 + s2;
                    fonttable = s1 + s2;
                }
                else if (st.IndexOf("Vijaya") > 0)
                {
                    s1 = st.Substring(0, st.IndexOf("Vijaya")) + "Vijaya";
                    s1 = s1.Replace("\\cpg-8532", "");
                    s2 = fonttable.Substring(fonttable.IndexOf("Vijaya") + 6);
                    if (s2.IndexOf("\\cpg-8532") < 0)
                    {
                        s2 = s2.Replace("Arial Unicode MS", "Calibri");
                        s2 = s2.Replace("Latha", "Calibri");
                    }
                    else
                        s2 = s2.Replace("\\cpg-8532", "");
                    fonttable = s1 + s2;
                }
                else if (st.IndexOf("Nirmala") > 0)
                {
                    s1 = st.Substring(0, st.IndexOf("Nirmala")) + "Nirmala";
                    s1 = s1.Replace("\\cpg-8532", "");
                    s2 = fonttable.Substring(fonttable.IndexOf("Nirmala") + 7);
                    if (s2.IndexOf("\\cpg-8532") < 0)
                    {
                        s2 = s2.Replace("Arial Unicode MS", "Calibri");
                        s2 = s2.Replace("Latha", "Calibri");
                    }
                    else
                        s2 = s2.Replace("\\cpg-8532", "");
                    fonttable = s1 + s2;
                }
            }

            st = fonttable + content;
            len = fonttable.Length - 3;
            pos = fonttable.IndexOf(" ") + 1;

            while (pos < len)
            {
                while ((ch = fonttable[pos]) != ';')
                {
                    fontname = fontname + ch;
                    pos += 1;
                }

                if (fontname == "Latha" | fontname == "Vijaya" | fontname == "Arial Unicode MS" | 
                    fontname == "Arial Unicode MS Western" | fontname.IndexOf("TAU") == 0 | fontname.IndexOf("Uni") == 0 |
                    fontname.IndexOf("Nirmala") == 0)
                {
                    {
                        switch (font)
                        {
                            case "TAM":
                                st = st.Replace(fontname, "Tam-Svc-Kumudham");
                                break;
                            case "TAB":
                                st = st.Replace(fontname, "TAB-LFS-Kamban");
                                break;
                            case "TAC":
                                st = st.Replace(fontname, "TAC-Barathi");
                                break;
                            case "TSC":
                                st = st.Replace(fontname, "TSC_Avarangal");
                                break;
                            case "SHREE":
                                st = st.Replace(fontname, "SHREE-TAM-0800");
                                break;
                            case "VANAVIL":
                                st = st.Replace(fontname, "VANAVIL-Avvaiyar");
                                break;
                            case "BAMINI":
                                st = st.Replace(fontname, "Bamini");
                                break;
                            case "SVC":
                                st = st.Replace(fontname, "Vaigai");
                                break;
                            case "LT-TM":
                                st = st.Replace(fontname, "LT-TM-Roja");
                                break;
                            case "STMZH":
                                st = st.Replace(fontname, "STMZH - 062");
                                break;
                            case "JEEVA":
                                st = st.Replace(fontname, "JF Aadhi");
                                break;
                            case "TAMIL":
                                st = st.Replace(fontname, "Tamil-Pearl");
                                break;
                            case "AMBIKA":
                                st = st.Replace(fontname, "Ambika");
                                break;
                        }
                        fonttype = fonttype + "T";
                    }
                }
                else
                    fonttype = fonttype + "E";

                fontname = "";
                fontstr = fontstr + "\\f" + num + " ";
                fontnum = fontnum + num;
                num += 1;

                partst = fonttable.Substring(pos);
                jump = partst.IndexOf(" ") + 1;
                pos += jump;
            }

            pos = st.IndexOf("}}") + 2;
            sw.Write(st.Substring(0, pos));
            content = st.Substring(pos);

            pos = content.IndexOf("\\f0");
            sw.Write(content.Substring(0, pos + 2));
            content = content.Substring(pos + 2);

            num = 0;
            while (num < content.Length)
            {
                sw.Write(content[num]);
                char next = content[num];
                m = fontnum.IndexOf(next);
                try
                {
                    ftype = fonttype[m];
                }
                catch
                {
                    break;
                }
                num += 1;

                switch (ftype)
                {
                    case 'E':

                        while (num < content.Length)
                        {
                            ch = content[num];
                            if (ch == '\\')
                            {
                                next = content[num + 1];
                                if (next == '\\')
                                {
                                    sw.Write("\\\\");
                                    num += 2;
                                }
                                else if (next == 'f')
                                {
                                    nextstr = content.Substring(num, 3);

                                    if (nextstr == "\\fs")
                                    {
                                        sw.Write("\\fs");
                                        sw.Write(content[num + 3]);
                                        sw.Write(content[num + 4]);
                                        num += 5;
                                    }
                                    else if (nextstr == "\\fi")
                                    {
                                        sw.Write("\\fi");
                                        num += 3;
                                    }
                                    else
                                    {
                                        sw.Write("\\f");
                                        num += 2;
                                        break;
                                    }
                                }
                                else
                                {
                                    sw.Write(content[num]);
                                    num += 1;
                                }
                            }
                            else
                            {
                                sw.Write(content[num]);
                                num += 1;
                            }
                        }
                        break;

                    case 'T':

                        while (num < content.Length)
                        {
                            ch = content[num];
                            if (ch == '\\')
                            {
                                next = content[num + 1];
                                if (next == 'p')
                                {
                                    if (content.Substring(num, 5) == "\\pard")
                                    {                                    
                                        sw.Write("\\pard");
                                        num += 5;
                                    }
                                    else if (content.Substring(num, 5) == "\\page")
                                    {
                                        sw.Write("\\page");
                                        num += 5;
                                    }
                                    else if (content.Substring(num, 4) == "\\par")
                                    {
                                        sw.Write("\\par");
                                        num += 4;
                                    }
                                }
                                else if (next == 'q')
                                {
                                    sw.Write(content.Substring(num, 3));
                                    num += 3;
                                }
                                else if (next == 'n')
                                {
                                    if (content.Substring(num, 12) == "\\nowidctlpar")
                                    {
                                        sw.Write("\\nowidctlpar");
                                        num += 12;
                                    }
                                    else
                                    {
                                        sw.Write("\\n");
                                        num += 2;
                                    }
                                }
                                else if (next == 'h')
                                {
                                    if (content.Substring(num, 8) == "\\hyphpar")
                                    {
                                        sw.Write("\\hyphpar");
                                        num += 8;
                                    }
                                    else if (content.Substring(num, 10) == "\\highlight")
                                    {
                                        sw.Write("\\highlight");
                                        num += 10;
                                    }
                                    else
                                    {
                                        sw.Write("\\h");
                                        num += 2;
                                    }
                                }
                                else if (next == 's')
                                {
                                    if (content.Substring(num, 3) == "\\sa")
                                    {
                                        sw.Write("\\sa");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 3) == "\\sb")
                                    {
                                        sw.Write("\\sb");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 7) == "\\slmult")
                                    {
                                        sw.Write("\\slmult");
                                        num += 7;
                                    }
                                    else if (content.Substring(num, 3) == "\\sl")
                                    {
                                        sw.Write("\\sl");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 4) == "\\sub")
                                    {
                                        sw.Write("\\sub");
                                        num += 4;
                                    }
                                    else if (content.Substring(num, 6) == "\\super")
                                    {
                                        sw.Write("\\super");
                                        num += 6;
                                    }
                                    else if (content.Substring(num, 7) == "\\strike")
                                    {
                                        sw.Write("\\strike");
                                        num += 7;
                                    }
                                    else
                                    {
                                        sw.Write("\\s");
                                        num += 2;
                                    }
                                }
                                else if (next == 'l')
                                {
                                    if (content.Substring(num, 5) == "\\line")
                                    {
                                        sw.Write("\\line");
                                        num += 5;
                                    }
                                    else if (content.Substring(num, 3) == "\\li")
                                    {
                                        sw.Write("\\li");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 7) == "\\lquote")
                                    {
                                        sw.Write("\\lquote");
                                        num += 7;
                                    }
                                    else if (content.Substring(num, 10) == "\\ldblquote")
                                    {
                                        if (font == "TAMIL")
                                            sw.Write("\\f2\\ldblquote\\f0");
                                        else
                                            sw.Write("\\ldblquote");
                                        num += 10;
                                    }
                                    else if (content.Substring(num, 7) == "\\ltrpar")
                                    {
                                        sw.Write("\\ltrpar");
                                        num += 7;
                                    }
                                    else
                                    {
                                        sw.Write("\\lang");
                                        num += 5;
                                    }
                                }
                                else if (next == 'b')
                                {
                                    if (content.Substring(num, 3) == "\\br")
                                    {
                                        sw.Write(content.Substring(num, 6));
                                        num += 6;
                                    }
                                    else
                                    {
                                        sw.Write("\\b");
                                        num += 2;
                                    }
                                }
                                else if (next == 'i')
                                {
                                    sw.Write("\\i");
                                    num += 2;
                                }
                                else if (next == '\\')
                                {
                                    sw.Write("\\\\");
                                    num += 2;
                                }
                                else if (next == 'f')
                                {
                                    if (content.Substring(num, 3) == "\\fs")
                                    {
                                        sw.Write("\\fs");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 3) == "\\fi")
                                    {                                   
                                        sw.Write("\\fi");
                                        num += 3;
                                    }
                                    else
                                    {
                                        sw.Write("\\" + next);
                                        num += 2;
                                        break;
                                    }
                                }
                                else if (next == 'r')
                                {
                                    if (content.Substring(num, 3) == "\\ri")
                                    {
                                        sw.Write("\\ri");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 4) == "\\row")
                                    {
                                        sw.Write("\\row");
                                        num += 4;
                                    }
                                    else if (content.Substring(num, 7) == "\\rquote")
                                    {
                                        sw.Write("\\rquote");
                                        num += 7;
                                    }
                                    else if (content.Substring(num, 10) == "\\rdblquote")
                                    {
                                        if (font == "TAMIL")
                                            sw.Write("\\f2\\rdblquote\\f0");
                                        else
                                            sw.Write("\\rdblquote");
                                        num += 10;
                                    }
                                    else
                                    {
                                        sw.Write("\\r");
                                        num += 2;
                                    }

                                }
                                else if (next == 'c')
                                {
                                    if (content.Substring(num, 5) == "\\caps")
                                    {
                                        sw.Write("\\caps");
                                        num += 5;
                                    }
                                    else
                                    {
                                        sw.Write("\\c");
                                        num += 2;
                                    }
                                }
                                else if (next == 't')
                                {
                                    if (content.Substring(num, 4) == "\\tab")
                                    {
                                        sw.Write("\\tab");
                                        num += 4;
                                    }
                                    else if (content.Substring(num, 3) == "\\tx")
                                    {
                                        sw.Write("\\tx");
                                        num += 3;
                                    }
                                    else if (content.Substring(num, 6) == "\\trowd")
                                    {
                                        jump = content.IndexOf("\\intbl", num) + 6;
                                        sw.Write(content.Substring(num, jump - num));
                                        num = jump;
                                    }
                                    else
                                    {
                                        sw.Write("\\t");
                                        num += 2;
                                    }
                                }
                                else if (next == 'e')
                                {
                                    if (content.Substring(num, 8) == "\\expndtw")
                                    {
                                        sw.Write("\\expndtw");
                                        num += 8;
                                    }
                                }
                                else if (next == 'u')
                                {
                                    if (content.Substring(num, 7) == "\\ulnone")
                                    {
                                        sw.Write("\\ulnone");
                                        num += 7;
                                    }
                                    else if (content.Substring(num, 3) == "\\ul")
                                    {
                                        sw.Write("\\ul");
                                        num += 3;
                                    }
                                    else
                                    {
                                        try
                                        {
                                            uletter = content.Substring(num + 1, 27);
                                        }
                                        catch
                                        {
                                        }

                                        if (uletter == "u3000?\\u3021?\\u2992?\\u3008?")
                                            num += 28;
                                        else if ((uletter = content.Substring(num + 1, 20)) == "u2965?\\u3021?\\u2999?")
                                        {
                                            string ottu = content.Substring(num + 22, 6);
                                            if (uottu.IndexOf(ottu) >= 0)
                                            {
                                                uletter = content.Substring(num + 1, 27);
                                                num += 28;
                                            }
                                            else
                                                num += 21;
                                        }
                                        else
                                        {
                                            uletter = content.Substring(num + 1, 6);
                                            string ottu = content.Substring(num + 8, 6);

                                            if (uottu.IndexOf(ottu) >= 0)
                                            {
                                                uletter = content.Substring(num + 1, 13);
                                                num += 14;
                                            }
                                            else
                                                num += 7;
                                        }

                                        for (n = 0; n <= 312; n++)
                                            if (uletter == (unicode[n])) break;

                                        if (n <= 312)
                                        {
                                            string style = "";                                           
                                            switch (font)
                                            {
                                                case "TAM":
                                                    tletter = tam[n];
                                                    if (tletter.IndexOf("'") == 0)
                                                        tletter = "\\" + tletter;
                                                    break;

                                                case "TAB":
                                                    tletter = tab[n];
                                                    if (tletter.IndexOf("'") == 0)
                                                        tletter = "\\" + tletter;
                                                    break;

                                                case "TAC":
                                                    tletter = "\\" + tace[n];
                                                    break;

                                                case "TSC":
                                                    tletter = "\\" + tscii[n];
                                                    break;

                                                case "SHREE":                                                    
                                                    tletter = shreelipi[n];
                                                    if (tletter.IndexOf("'") == 0 | tletter.IndexOf("{") == 0 | tletter.IndexOf("}") == 0)
                                                        tletter = "\\" + tletter;
                                                    if (tletter.IndexOf("bul") == 0)
                                                        tletter = "\\" + tletter + " ";
                                                    break;

                                                case "VANAVIL":
                                                    tletter = vanavil[n];
                                                    if (tletter.IndexOf("'") == 0 | tletter.IndexOf("{") == 0 | tletter.IndexOf("}") == 0)
                                                        tletter = "\\" + tletter;
                                                    break;

                                                case "BAMINI":
                                                    tletter = bamini[n];
                                                    if (tletter.IndexOf("'") == 0)
                                                        tletter = "\\" + tletter;
                                                    break;

                                                case "SVC":
                                                    tletter = softview[n];
                                                    if (tletter.IndexOf("'") == 0)
                                                        tletter = "\\" + tletter;
                                                    break;

                                                case "LT-TM":
                                                    tletter = lttm[n];
                                                    if (tletter.IndexOf("'") == 0 | tletter.IndexOf("{") == 0 | tletter.IndexOf("}") == 0)
                                                        tletter = "\\" + tletter;
                                                    break;

                                                case "STMZH":
                                                    tletter = senthamizh[n];
                                                    if (tletter.IndexOf("'") == 0 | tletter.IndexOf("{") == 0)
                                                        tletter = "\\" + tletter;
                                                    break;

                                                case "JEEVA":
                                                    tletter = jeeva[n];
                                                    if (tletter.IndexOf("'") == 0)
                                                        tletter = "\\" + tletter;
                                                    if (tletter == "-")
                                                        tletter = "\\'e2";
                                                    break;

                                                case "TAMIL":
                                                    tletter = amudham[n];
                                                    break;

                                                case "AMBIKA":
                                                    tletter = ambika[n];
                                                    if (tletter.IndexOf("'") == 0 | tletter.IndexOf("u") == 0 | tletter.IndexOf("r") == 0)
                                                    {
                                                        tletter = "\\" + tletter;
                                                        if (prevtletter != "")
                                                            prevtletter = "";
                                                    }
                                                    else if (tletter.IndexOf("b") == 0 | tletter.IndexOf("r") == 0)
                                                    {
                                                        tletter = "\\" + tletter;
                                                        prevtletter = tletter;
                                                    }

                                                    if (tletter.IndexOf("\\u8486?") >= 0)
                                                        tletter = tletter.Replace("\\u8486?", "[");

                                                    break;
                                            }
                                            try
                                            {
                                                if (uletter.Length > 6)
                                                    style = content.Substring(num - 16, 2);
                                                else
                                                    style = content.Substring(num - 9, 2);
                                            }
                                            catch
                                            {
                                                style = "";
                                            }

                                            if (tletter.IndexOf("'") < 0 & (style == "\\b" | style == "\\i" | style == "ke" | style == "bl"))
                                                tletter = " " + tletter;

                                            if (font == "AMBIKA" & tletter.Length == 1 & prevtletter != "")
                                            {
                                                tletter = " " + tletter;
                                                prevtletter = "";
                                            }
                                            sw.Write(tletter);
                                        }
                                        else if (font == "SHREE")
                                        {
                                            string[] usymbol = { "u3059?", "u3060?", "u3061?", "u3064?", "u3065?", "u3066?", "u3057?" };
                                            string[] ssymbol = { "\\'88", "N", "M", "\\'fe", "\\'99", "O", "'84" };
                                            int index = Array.IndexOf(usymbol, uletter);
                                            sw.Write(ssymbol[index]);
                                        }
                                    }
                                }
                                else
                                {
                                    sw.Write(next);
                                    num += 1;
                                }
                            }
                            else if (ch == '{')
                            {
                                jump = content.IndexOf('}', num) + 1;
                                sw.Write(content.Substring(num, jump - num));
                                num = jump;
                            }
                            else if (font == "TAMIL" & ",;:.<>[]?!*\"".IndexOf(ch) >= 0)
                            {
                                sw.Write("\\f2 " + ch + " \\f0");
                                num += 1;
                            }
                            else
                            {
                                sw.Write(ch);
                                num += 1;
                            }
                        }
                        break;
                }
            }
            sr.Close();
            sw.Close();

            rtb.LoadFile("tempout.rtf", RichTextBoxStreamType.RichText);
            FontComboBox.Text = rtb.SelectionFont.Name;
            this.Text = title;

            MessageBox.Show("Font encoding converted successfully!", "Success!");
            goto Match;

        NoMatch:
            MessageBox.Show("Font encoding not matching!", "Error!");

            Match:
            
            try
            {
                File.Delete("tempin.rtf");
                File.Delete("tempout.rtf");
            }
            catch
            {
                MessageBox.Show("Unable to delete temporary files!");
            }
        }
 
        private void rtb_SelectionChanged(object sender, MouseEventArgs e)
        {
            try
            {
                FontComboBox.Text = rtb.SelectionFont.Name;
            }
            catch
            {
            
            }
            if (rtb.SelectionLength != 0)
            {
                CutToolStripMenuItem.Enabled = true;
                CopyToolStripMenuItem.Enabled = true;
                CutButton.Enabled = true;
                CopyButton.Enabled = true;
            }
            else
            {
                CutToolStripMenuItem.Enabled = false;
                CopyToolStripMenuItem.Enabled = false;
                CutButton.Enabled = false;
                CopyButton.Enabled = false;
            }
        }

        private void FontComboBox_SelectionChangeCommitted(object sender, EventArgs e)
        {
            if (rtb.SelectionLength == 0)
            {
                string st = rtb.Rtf;
                int pos = rtb.SelectionStart;
                string font = rtb.SelectionFont.Name + ";";
                string selfont = FontComboBox.Text + ";";

                st = st.Replace(font, selfont);
                rtb.Rtf = st;
                SendKeys.Send("{TAB}");
                rtb.SelectionStart = pos;
            }
            else
            {
                try
                {
                    rtb.SelectionFont = new Font(FontComboBox.Text, rtb.SelectionFont.Size);
                }
                catch
                {
                    MessageBox.Show("Multiple fonts are there in the selection!", "Error!");
                }
            }
        }

        private void FullTextDiffFont_Click(object sender, EventArgs e)
        {
            Font font = rtb.SelectionFont;
            string st = rtb.Rtf;
            string fname = rtb.SelectionFont.Name + ";";

            FontDialog fd = new FontDialog();
            fd.Font = rtb.SelectionFont;

            DialogResult result = fd.ShowDialog();

            if (result == DialogResult.OK)
            {
                string selfont = fd.Font.Name + ";";
                st = st.Replace(fname, selfont);
                rtb.Rtf = st;
                FontComboBox.Text = fd.Font.Name;
            }
        }

        private void SelectedTextDiffFont_Click(object sender, EventArgs e)
        {
            Font font = rtb.SelectionFont;

            FontDialog fd = new FontDialog();
            fd.Font = rtb.SelectionFont;

            DialogResult result = fd.ShowDialog();

            if (result == DialogResult.OK)
            {
                try
                {
                    rtb.SelectionFont = new Font(fd.Font.Name, rtb.SelectionFont.Size);
                    rtb.SelectionFont = fd.Font;
                }
                catch
                {
                    MessageBox.Show("Multiple fonts are there in the selection!", "Error!");
                }
            }
        }

        private void ToDifferentFont_Click(object sender, EventArgs e)
        {
            FontDialog fd = new FontDialog();
            fd.Font = rtb.SelectionFont;

            DialogResult result = fd.ShowDialog();

            if (result == DialogResult.OK)
            {
                /*int len;
                string fontname = "";
                char ch;
                string st = rtb.Rtf;

                int pos = st.IndexOf("}}") + 2;
                string fonttable = st.Substring(0, pos);
                len = fonttable.Length - 3;
                pos = fonttable.IndexOf(" ") + 1;

                while ((ch = fonttable[pos]) != ';')
                {
                    fontname = fontname + ch;
                    pos += 1;
                }

                st = st.Replace(fontname, fd.Font.Name);*/
                FixFont(fd.Font.Name);
                FontComboBox.Text = fd.Font.Name;
            }
        }

        private void FixFont(string font)
        {
            int len;
            string fontname = "";
            char ch;
            string st = rtb.Rtf;

            int pos = st.IndexOf("}}") + 2;
            string fonttable = st.Substring(0, pos);
            len = fonttable.Length - 3;
            pos = fonttable.IndexOf(" ") + 1;

            while ((ch = fonttable[pos]) != ';')
            {
                fontname = fontname + ch;
                pos += 1;
            }

            st = st.Replace(fontname, font);
            rtb.Rtf = st;          
        }

        private void TamToUnicode_Click(object sender, EventArgs e)
        {
            Convert("Tam");
        }

        private void TabToUnicode_Click(object sender, EventArgs e)
        {         
            Convert("Tab");
        }

        private void TaceToUnicode_Click(object sender, EventArgs e)
        {
            Convert("Tac");
        }

        private void TsciiToUnicode_Click(object sender, EventArgs e)
        {
            Convert("TSC");
        }

        private void ShreelipiToUnicode_Click(object sender, EventArgs e)
        {
            Convert("Shree");
        }

        private void VanavilToUnicode_Click(object sender, EventArgs e)
        {
            Convert("vanavil");
        }

        private void BaminiToUnicode_Click(object sender, EventArgs e)
        {
            Convert("Bamini");
        }

        private void SoftviewToUnicode_Click(object sender, EventArgs e)
        {
            FixFont("svc");
            Convert("svc");
        }

        private void LttmToUnicode_Click(object sender, EventArgs e)
        {
            Convert("lt-tm");
        }

        private void SenthamizhToUnicode_Click(object sender, EventArgs e)
        {
            Convert("STMZH");
        }

        private void JeevaToUnicode_Click(object sender, EventArgs e)
        {
            Convert("JF");
        }

        private void AmudhamToUnicode_Click(object sender, EventArgs e)
        {
            Convert("Tamil");
        }

        private void SuriyanToUnicode_Click(object sender, EventArgs e)
        {
            Convert("Suriyan");
        }

        private void CcToUnicode_Click(object sender, EventArgs e)
        {
            Convert("cc");
        }
        
        private void AmbikaToUnicode_Click(object sender, EventArgs e)
        {
            Convert("Ambika");
        }

        private void UnicodeToTam_Click(object sender, EventArgs e)
        {
            Deconvert("TAM");
        }

        private void UnicodeToTab_Click(object sender, EventArgs e)
        {
            Deconvert("TAB");
        }

        private void UnicodeToTace_Click(object sender, EventArgs e)
        {
            Deconvert("TAC");
        }

        private void UnicodeToTscii_Click(object sender, EventArgs e)
        {
            Deconvert("TSC");
        }
        
        private void UnicodeToShreelipi_Click(object sender, EventArgs e)
        {
            Deconvert("SHREE");
        }

        private void UnicodeToVanavil_Click(object sender, EventArgs e)
        {
            Deconvert("VANAVIL");
        }

        private void UnicodeToBamini_Click(object sender, EventArgs e)
        {
            Deconvert("BAMINI");
        }

        private void UnicodeToSoftview_Click(object sender, EventArgs e)
        {
            Deconvert("SVC");
        }

        private void UnicodeToLttm_Click(object sender, EventArgs e)
        {
            Deconvert("LT-TM");
        }

        private void UnicodeToSenthamizh_Click(object sender, EventArgs e)
        {
            Deconvert("STMZH");
        }

        private void UnicodeToJeeva_Click(object sender, EventArgs e)
        {
            Deconvert("JEEVA");
        }

        private void UnicodeToAmudham_Click(object sender, EventArgs e)
        {
            Deconvert("TAMIL");
        }

        private void UnicodeToAmbika_Click(object sender, EventArgs e)
        {
            Deconvert("AMBIKA");
        }

        public void Resizing(object sender, EventArgs e)
        {
            /*try
            {
                if (frm.ActiveForm.Width > 820)
                {
                    rtb.Left = (frm.ActiveForm.Width - 820) / 2;
                    rtb.Width = 800;
                }
                if (rtb.Left > 20)
                {                  
                    FontName.Left = rtb.Left + 250;
                    FontComboBox.Left = rtb.Left + 318;
                }
                if (frm.ActiveForm.Width <= 820)
                {
                    rtb.Left = 0;
                    rtb.Width = frm.ActiveForm.Width - 18;
                }
                rtb.Height = frm.ActiveForm.Height - 90;
            }
            catch
            {
            }*/
        }

        private void frm_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (rtb.Text != OriginalText & rtb.Visible & edit == true)
            {
                DialogResult result = MessageBox.Show("Do you want to save the changes?", "Save Changes", 
                    MessageBoxButtons.YesNoCancel, MessageBoxIcon.Warning);
                if (result == DialogResult.Yes)
                    SaveAsToolStripMenuItem_Click(sender, e);
                else if (result == DialogResult.Cancel)
                    e.Cancel = true;
            }
        }

        private void CutButton_Click(object sender, EventArgs e)
        {
            rtb.Cut();
        }

        private void CopyButton_Click(object sender, EventArgs e)
        {
            rtb.Copy();
        }

        private void PasteButton_Click(object sender, EventArgs e)
        {
            PasteToolStripMenuItem_Click(sender, e);
        }

        private void SelectAllButton_Click(object sender, EventArgs e)
        {
            SelectAllToolStripMenuItem_Click(sender, e);
        }

        private void NewButton_Click(object sender, EventArgs e)
        {
            NewToolStripMenuItem_Click(sender, e);
        }

        private void OpenButton_Click(object sender, EventArgs e)
        {
            OpenToolStripMenuItem_Click(sender, e);
        }

        private void SaveButton_Click(object sender, EventArgs e)
        {
            if (fullfname != "")
                SaveToolStripMenuItem_Click(sender, e);
            else
                SaveAsToolStripMenuItem_Click(sender, e);
        }

        private void SaveAsButton_Click(object sender, EventArgs e)
        {
            SaveAsToolStripMenuItem_Click(sender, e);
        }

        public void SelectText(object sender, EventArgs e)
        {
            if (rtb.SelectionLength != 0)
            {
                CutButton.Enabled = true;
                CopyButton.Enabled = true;
            }
        }

        private void rtb_TextChanged(object sender, EventArgs e)
        {
            if (PrevText != "")
            {
                edit = true;
                return;
            }
            PrevText = "Edited";
        }
    }
}
